{
  "api/ConcreteMC.MolangSharp.Attributes.html": {
    "href": "api/ConcreteMC.MolangSharp.Attributes.html",
    "title": "Namespace ConcreteMC.MolangSharp.Attributes",
    "keywords": "Namespace ConcreteMC.MolangSharp.Attributes Classes MoFunctionAttribute Identifies a method as a MoLang Accessible function MoObservableAttribute MoPropertyAttribute Identifies a class property/field as MoLang Accessible"
  },
  "api/ConcreteMC.MolangSharp.Attributes.MoFunctionAttribute.html": {
    "href": "api/ConcreteMC.MolangSharp.Attributes.MoFunctionAttribute.html",
    "title": "Class MoFunctionAttribute",
    "keywords": "Class MoFunctionAttribute Identifies a method as a MoLang Accessible function Inheritance object Attribute MoFunctionAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Attributes Assembly: ConcreteMC.MolangSharp.dll Syntax [AttributeUsage(AttributeTargets.Method)] public class MoFunctionAttribute : Attribute Constructors | Improve this Doc View Source MoFunctionAttribute(params string[]) Identifies a method as a MoLang Accessible function Declaration public MoFunctionAttribute(params string[] functionNames) Parameters Type Name Description string[] functionNames The names this function is callable by in a MoLang expression Properties | Improve this Doc View Source Name The names this method is exposed via Declaration public string[] Name { get; } Property Value Type Description string[]"
  },
  "api/ConcreteMC.MolangSharp.Attributes.MoObservableAttribute.html": {
    "href": "api/ConcreteMC.MolangSharp.Attributes.MoObservableAttribute.html",
    "title": "Class MoObservableAttribute",
    "keywords": "Class MoObservableAttribute Inheritance object Attribute MoObservableAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Attributes Assembly: ConcreteMC.MolangSharp.dll Syntax [AttributeUsage(AttributeTargets.Property|AttributeTargets.Field)] public class MoObservableAttribute : Attribute"
  },
  "api/ConcreteMC.MolangSharp.Attributes.MoPropertyAttribute.html": {
    "href": "api/ConcreteMC.MolangSharp.Attributes.MoPropertyAttribute.html",
    "title": "Class MoPropertyAttribute",
    "keywords": "Class MoPropertyAttribute Identifies a class property/field as MoLang Accessible Inheritance object Attribute MoPropertyAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Attributes Assembly: ConcreteMC.MolangSharp.dll Syntax [AttributeUsage(AttributeTargets.Property|AttributeTargets.Field, AllowMultiple = true)] public class MoPropertyAttribute : Attribute Constructors | Improve this Doc View Source MoPropertyAttribute(string) Identifies a class property/field as MoLang Accessible Declaration public MoPropertyAttribute(string name) Parameters Type Name Description string name The name used for this property. Properties | Improve this Doc View Source Name The name of this property as used in a MoLang expression Declaration public string Name { get; } Property Value Type Description string"
  },
  "api/ConcreteMC.MolangSharp.Parser.Exceptions.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Exceptions.html",
    "title": "Namespace ConcreteMC.MolangSharp.Parser.Exceptions",
    "keywords": "Namespace ConcreteMC.MolangSharp.Parser.Exceptions Classes MoLangParserException"
  },
  "api/ConcreteMC.MolangSharp.Parser.Exceptions.MoLangParserException.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Exceptions.MoLangParserException.html",
    "title": "Class MoLangParserException",
    "keywords": "Class MoLangParserException Inheritance object Exception MoLangParserException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: ConcreteMC.MolangSharp.Parser.Exceptions Assembly: ConcreteMC.MolangSharp.dll Syntax public class MoLangParserException : Exception, ISerializable Constructors | Improve this Doc View Source MoLangParserException(string) Declaration public MoLangParserException(string message) Parameters Type Name Description string message | Improve this Doc View Source MoLangParserException(string, Exception) Declaration public MoLangParserException(string message, Exception innerException) Parameters Type Name Description string message Exception innerException Implements ISerializable"
  },
  "api/ConcreteMC.MolangSharp.Parser.Expression-1.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Expression-1.html",
    "title": "Class Expression<T>",
    "keywords": "Class Expression<T> Inheritance object Expression Expression<T> Implements IExpression Inherited Members Expression.Parameters Expression.Meta Expression.Evaluate(MoScope, MoLangEnvironment) Expression.Assign(MoScope, MoLangEnvironment, IMoValue) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Parser Assembly: ConcreteMC.MolangSharp.dll Syntax public abstract class Expression<T> : Expression, IExpression Type Parameters Name Description T Constructors | Improve this Doc View Source Expression(T) Declaration protected Expression(T value) Parameters Type Name Description T value Properties | Improve this Doc View Source Value Declaration public T Value { get; set; } Property Value Type Description T Implements IExpression"
  },
  "api/ConcreteMC.MolangSharp.Parser.Expression.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Expression.html",
    "title": "Class Expression",
    "keywords": "Class Expression An abstract base class for all Expressions Inheritance object Expression Expression<T> ArrayAccessExpression AssignExpression BinaryOpExpression BooleanExpression BooleanNotExpression BreakExpression ContinueExpression ForEachExpression FuncCallExpression LoopExpression NameExpression NumberExpression ReturnExpression ScriptExpression StatementExpression StringExpression TernaryExpression ThisExpression UnaryMinusExpression UnaryPlusExpression Implements IExpression Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Parser Assembly: ConcreteMC.MolangSharp.dll Syntax public abstract class Expression : IExpression Constructors | Improve this Doc View Source Expression(params IExpression[]) Create a new instance of the class Declaration protected Expression(params IExpression[] parameters) Parameters Type Name Description IExpression[] parameters The parameters used by this expression Properties | Improve this Doc View Source Meta Contains metadata about this expression Declaration public ExpressionMeta Meta { get; } Property Value Type Description ExpressionMeta | Improve this Doc View Source Parameters The parameters used by this expression Declaration public IExpression[] Parameters { get; set; } Property Value Type Description IExpression[] Methods | Improve this Doc View Source Assign(MoScope, MoLangEnvironment, IMoValue) Invoked when trying to assign a value to a property/field Declaration public virtual void Assign(MoScope scope, MoLangEnvironment environment, IMoValue value) Parameters Type Name Description MoScope scope The current scope MoLangEnvironment environment The environment provided by the MoLangRuntime IMoValue value The value to assign | Improve this Doc View Source Evaluate(MoScope, MoLangEnvironment) Evaluate the expression Declaration public abstract IMoValue Evaluate(MoScope scope, MoLangEnvironment environment) Parameters Type Name Description MoScope scope The current scope MoLangEnvironment environment The environment provided by the MoLangRuntime Returns Type Description IMoValue The value returned by the expression Implements IExpression"
  },
  "api/ConcreteMC.MolangSharp.Parser.ExpressionMeta.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.ExpressionMeta.html",
    "title": "Class ExpressionMeta",
    "keywords": "Class ExpressionMeta Contains metadata about an expression Inheritance object ExpressionMeta Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: ConcreteMC.MolangSharp.Parser Assembly: ConcreteMC.MolangSharp.dll Syntax public class ExpressionMeta Properties | Improve this Doc View Source Next The next expression Declaration public IExpression Next { get; set; } Property Value Type Description IExpression | Improve this Doc View Source Parent The parent expression Declaration public IExpression Parent { get; set; } Property Value Type Description IExpression | Improve this Doc View Source Previous The previous expression Declaration public IExpression Previous { get; set; } Property Value Type Description IExpression | Improve this Doc View Source Token The token Declaration public Token Token { get; set; } Property Value Type Description Token Methods | Improve this Doc View Source ToString() Returns a string that represents the current object. Declaration public override string ToString() Returns Type Description string A string that represents the current object. Overrides object.ToString()"
  },
  "api/ConcreteMC.MolangSharp.Parser.Expressions.ArrayAccessExpression.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Expressions.ArrayAccessExpression.html",
    "title": "Class ArrayAccessExpression",
    "keywords": "Class ArrayAccessExpression Inheritance object Expression ArrayAccessExpression Implements IExpression Inherited Members Expression.Parameters Expression.Meta object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Parser.Expressions Assembly: ConcreteMC.MolangSharp.dll Syntax public class ArrayAccessExpression : Expression, IExpression Constructors | Improve this Doc View Source ArrayAccessExpression(IExpression, IExpression) Declaration public ArrayAccessExpression(IExpression array, IExpression index) Parameters Type Name Description IExpression array IExpression index Properties | Improve this Doc View Source Array Declaration public IExpression Array { get; } Property Value Type Description IExpression | Improve this Doc View Source Index Declaration public IExpression Index { get; } Property Value Type Description IExpression Methods | Improve this Doc View Source Assign(MoScope, MoLangEnvironment, IMoValue) Invoked when trying to assign a value to a property/field Declaration public override void Assign(MoScope scope, MoLangEnvironment environment, IMoValue value) Parameters Type Name Description MoScope scope The current scope MoLangEnvironment environment The environment provided by the MoLangRuntime IMoValue value The value to assign Overrides Expression.Assign(MoScope, MoLangEnvironment, IMoValue) | Improve this Doc View Source Evaluate(MoScope, MoLangEnvironment) Evaluate the expression Declaration public override IMoValue Evaluate(MoScope scope, MoLangEnvironment environment) Parameters Type Name Description MoScope scope The current scope MoLangEnvironment environment The environment provided by the MoLangRuntime Returns Type Description IMoValue The value returned by the expression Overrides Expression.Evaluate(MoScope, MoLangEnvironment) Implements IExpression"
  },
  "api/ConcreteMC.MolangSharp.Parser.Expressions.AssignExpression.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Expressions.AssignExpression.html",
    "title": "Class AssignExpression",
    "keywords": "Class AssignExpression Inheritance object Expression AssignExpression Implements IExpression Inherited Members Expression.Parameters Expression.Meta Expression.Assign(MoScope, MoLangEnvironment, IMoValue) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Parser.Expressions Assembly: ConcreteMC.MolangSharp.dll Syntax public class AssignExpression : Expression, IExpression Constructors | Improve this Doc View Source AssignExpression(IExpression, IExpression) Declaration public AssignExpression(IExpression variable, IExpression expr) Parameters Type Name Description IExpression variable IExpression expr Properties | Improve this Doc View Source Expression Declaration public IExpression Expression { get; } Property Value Type Description IExpression | Improve this Doc View Source Variable Declaration public IExpression Variable { get; } Property Value Type Description IExpression Methods | Improve this Doc View Source Evaluate(MoScope, MoLangEnvironment) Evaluate the expression Declaration public override IMoValue Evaluate(MoScope scope, MoLangEnvironment environment) Parameters Type Name Description MoScope scope The current scope MoLangEnvironment environment The environment provided by the MoLangRuntime Returns Type Description IMoValue The value returned by the expression Overrides Expression.Evaluate(MoScope, MoLangEnvironment) Implements IExpression"
  },
  "api/ConcreteMC.MolangSharp.Parser.Expressions.BinaryOp.ArrowExpression.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Expressions.BinaryOp.ArrowExpression.html",
    "title": "Class ArrowExpression",
    "keywords": "Class ArrowExpression Inheritance object Expression BinaryOpExpression ArrowExpression Implements IExpression Inherited Members BinaryOpExpression.Left BinaryOpExpression.Right Expression.Parameters Expression.Meta Expression.Assign(MoScope, MoLangEnvironment, IMoValue) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Parser.Expressions.BinaryOp Assembly: ConcreteMC.MolangSharp.dll Syntax public class ArrowExpression : BinaryOpExpression, IExpression Constructors | Improve this Doc View Source ArrowExpression(IExpression, IExpression) Declaration public ArrowExpression(IExpression left, IExpression right) Parameters Type Name Description IExpression left IExpression right Methods | Improve this Doc View Source Evaluate(MoScope, MoLangEnvironment) Evaluate the expression Declaration public override IMoValue Evaluate(MoScope scope, MoLangEnvironment environment) Parameters Type Name Description MoScope scope The current scope MoLangEnvironment environment The environment provided by the MoLangRuntime Returns Type Description IMoValue The value returned by the expression Overrides Expression.Evaluate(MoScope, MoLangEnvironment) | Improve this Doc View Source GetSigil() Declaration public override string GetSigil() Returns Type Description string Overrides BinaryOpExpression.GetSigil() Implements IExpression"
  },
  "api/ConcreteMC.MolangSharp.Parser.Expressions.BinaryOp.BooleanAndExpression.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Expressions.BinaryOp.BooleanAndExpression.html",
    "title": "Class BooleanAndExpression",
    "keywords": "Class BooleanAndExpression Inheritance object Expression BinaryOpExpression BooleanAndExpression Implements IExpression Inherited Members BinaryOpExpression.Left BinaryOpExpression.Right Expression.Parameters Expression.Meta Expression.Assign(MoScope, MoLangEnvironment, IMoValue) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Parser.Expressions.BinaryOp Assembly: ConcreteMC.MolangSharp.dll Syntax public class BooleanAndExpression : BinaryOpExpression, IExpression Constructors | Improve this Doc View Source BooleanAndExpression(IExpression, IExpression) Declaration public BooleanAndExpression(IExpression l, IExpression r) Parameters Type Name Description IExpression l IExpression r Methods | Improve this Doc View Source Evaluate(MoScope, MoLangEnvironment) Evaluate the expression Declaration public override IMoValue Evaluate(MoScope scope, MoLangEnvironment environment) Parameters Type Name Description MoScope scope The current scope MoLangEnvironment environment The environment provided by the MoLangRuntime Returns Type Description IMoValue The value returned by the expression Overrides Expression.Evaluate(MoScope, MoLangEnvironment) | Improve this Doc View Source GetSigil() Declaration public override string GetSigil() Returns Type Description string Overrides BinaryOpExpression.GetSigil() Implements IExpression"
  },
  "api/ConcreteMC.MolangSharp.Parser.Expressions.BinaryOp.BooleanOrExpression.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Expressions.BinaryOp.BooleanOrExpression.html",
    "title": "Class BooleanOrExpression",
    "keywords": "Class BooleanOrExpression Inheritance object Expression BinaryOpExpression BooleanOrExpression Implements IExpression Inherited Members BinaryOpExpression.Left BinaryOpExpression.Right Expression.Parameters Expression.Meta Expression.Assign(MoScope, MoLangEnvironment, IMoValue) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Parser.Expressions.BinaryOp Assembly: ConcreteMC.MolangSharp.dll Syntax public class BooleanOrExpression : BinaryOpExpression, IExpression Constructors | Improve this Doc View Source BooleanOrExpression(IExpression, IExpression) Declaration public BooleanOrExpression(IExpression l, IExpression r) Parameters Type Name Description IExpression l IExpression r Methods | Improve this Doc View Source Evaluate(MoScope, MoLangEnvironment) Evaluate the expression Declaration public override IMoValue Evaluate(MoScope scope, MoLangEnvironment environment) Parameters Type Name Description MoScope scope The current scope MoLangEnvironment environment The environment provided by the MoLangRuntime Returns Type Description IMoValue The value returned by the expression Overrides Expression.Evaluate(MoScope, MoLangEnvironment) | Improve this Doc View Source GetSigil() Declaration public override string GetSigil() Returns Type Description string Overrides BinaryOpExpression.GetSigil() Implements IExpression"
  },
  "api/ConcreteMC.MolangSharp.Parser.Expressions.BinaryOp.CoalesceExpression.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Expressions.BinaryOp.CoalesceExpression.html",
    "title": "Class CoalesceExpression",
    "keywords": "Class CoalesceExpression Inheritance object Expression BinaryOpExpression CoalesceExpression Implements IExpression Inherited Members BinaryOpExpression.Left BinaryOpExpression.Right Expression.Parameters Expression.Meta Expression.Assign(MoScope, MoLangEnvironment, IMoValue) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Parser.Expressions.BinaryOp Assembly: ConcreteMC.MolangSharp.dll Syntax public class CoalesceExpression : BinaryOpExpression, IExpression Constructors | Improve this Doc View Source CoalesceExpression(IExpression, IExpression) Declaration public CoalesceExpression(IExpression l, IExpression r) Parameters Type Name Description IExpression l IExpression r Methods | Improve this Doc View Source Evaluate(MoScope, MoLangEnvironment) Evaluate the expression Declaration public override IMoValue Evaluate(MoScope scope, MoLangEnvironment environment) Parameters Type Name Description MoScope scope The current scope MoLangEnvironment environment The environment provided by the MoLangRuntime Returns Type Description IMoValue The value returned by the expression Overrides Expression.Evaluate(MoScope, MoLangEnvironment) | Improve this Doc View Source GetSigil() Declaration public override string GetSigil() Returns Type Description string Overrides BinaryOpExpression.GetSigil() Implements IExpression"
  },
  "api/ConcreteMC.MolangSharp.Parser.Expressions.BinaryOp.DivideExpression.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Expressions.BinaryOp.DivideExpression.html",
    "title": "Class DivideExpression",
    "keywords": "Class DivideExpression Inheritance object Expression BinaryOpExpression DivideExpression Implements IExpression Inherited Members BinaryOpExpression.Left BinaryOpExpression.Right Expression.Parameters Expression.Meta Expression.Assign(MoScope, MoLangEnvironment, IMoValue) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Parser.Expressions.BinaryOp Assembly: ConcreteMC.MolangSharp.dll Syntax public class DivideExpression : BinaryOpExpression, IExpression Constructors | Improve this Doc View Source DivideExpression(IExpression, IExpression) Declaration public DivideExpression(IExpression l, IExpression r) Parameters Type Name Description IExpression l IExpression r Methods | Improve this Doc View Source Evaluate(MoScope, MoLangEnvironment) Evaluate the expression Declaration public override IMoValue Evaluate(MoScope scope, MoLangEnvironment environment) Parameters Type Name Description MoScope scope The current scope MoLangEnvironment environment The environment provided by the MoLangRuntime Returns Type Description IMoValue The value returned by the expression Overrides Expression.Evaluate(MoScope, MoLangEnvironment) | Improve this Doc View Source GetSigil() Declaration public override string GetSigil() Returns Type Description string Overrides BinaryOpExpression.GetSigil() Implements IExpression"
  },
  "api/ConcreteMC.MolangSharp.Parser.Expressions.BinaryOp.EqualExpression.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Expressions.BinaryOp.EqualExpression.html",
    "title": "Class EqualExpression",
    "keywords": "Class EqualExpression Inheritance object Expression BinaryOpExpression EqualExpression Implements IExpression Inherited Members BinaryOpExpression.Left BinaryOpExpression.Right Expression.Parameters Expression.Meta Expression.Assign(MoScope, MoLangEnvironment, IMoValue) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Parser.Expressions.BinaryOp Assembly: ConcreteMC.MolangSharp.dll Syntax public class EqualExpression : BinaryOpExpression, IExpression Constructors | Improve this Doc View Source EqualExpression(IExpression, IExpression) Declaration public EqualExpression(IExpression l, IExpression r) Parameters Type Name Description IExpression l IExpression r Methods | Improve this Doc View Source Evaluate(MoScope, MoLangEnvironment) Evaluate the expression Declaration public override IMoValue Evaluate(MoScope scope, MoLangEnvironment environment) Parameters Type Name Description MoScope scope The current scope MoLangEnvironment environment The environment provided by the MoLangRuntime Returns Type Description IMoValue The value returned by the expression Overrides Expression.Evaluate(MoScope, MoLangEnvironment) | Improve this Doc View Source GetSigil() Declaration public override string GetSigil() Returns Type Description string Overrides BinaryOpExpression.GetSigil() Implements IExpression"
  },
  "api/ConcreteMC.MolangSharp.Parser.Expressions.BinaryOp.GreaterExpression.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Expressions.BinaryOp.GreaterExpression.html",
    "title": "Class GreaterExpression",
    "keywords": "Class GreaterExpression Inheritance object Expression BinaryOpExpression GreaterExpression Implements IExpression Inherited Members BinaryOpExpression.Left BinaryOpExpression.Right Expression.Parameters Expression.Meta Expression.Assign(MoScope, MoLangEnvironment, IMoValue) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Parser.Expressions.BinaryOp Assembly: ConcreteMC.MolangSharp.dll Syntax public class GreaterExpression : BinaryOpExpression, IExpression Constructors | Improve this Doc View Source GreaterExpression(IExpression, IExpression) Declaration public GreaterExpression(IExpression l, IExpression r) Parameters Type Name Description IExpression l IExpression r Methods | Improve this Doc View Source Evaluate(MoScope, MoLangEnvironment) Evaluate the expression Declaration public override IMoValue Evaluate(MoScope scope, MoLangEnvironment environment) Parameters Type Name Description MoScope scope The current scope MoLangEnvironment environment The environment provided by the MoLangRuntime Returns Type Description IMoValue The value returned by the expression Overrides Expression.Evaluate(MoScope, MoLangEnvironment) | Improve this Doc View Source GetSigil() Declaration public override string GetSigil() Returns Type Description string Overrides BinaryOpExpression.GetSigil() Implements IExpression"
  },
  "api/ConcreteMC.MolangSharp.Parser.Expressions.BinaryOp.GreaterOrEqualExpression.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Expressions.BinaryOp.GreaterOrEqualExpression.html",
    "title": "Class GreaterOrEqualExpression",
    "keywords": "Class GreaterOrEqualExpression Inheritance object Expression BinaryOpExpression GreaterOrEqualExpression Implements IExpression Inherited Members BinaryOpExpression.Left BinaryOpExpression.Right Expression.Parameters Expression.Meta Expression.Assign(MoScope, MoLangEnvironment, IMoValue) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Parser.Expressions.BinaryOp Assembly: ConcreteMC.MolangSharp.dll Syntax public class GreaterOrEqualExpression : BinaryOpExpression, IExpression Constructors | Improve this Doc View Source GreaterOrEqualExpression(IExpression, IExpression) Declaration public GreaterOrEqualExpression(IExpression l, IExpression r) Parameters Type Name Description IExpression l IExpression r Methods | Improve this Doc View Source Evaluate(MoScope, MoLangEnvironment) Evaluate the expression Declaration public override IMoValue Evaluate(MoScope scope, MoLangEnvironment environment) Parameters Type Name Description MoScope scope The current scope MoLangEnvironment environment The environment provided by the MoLangRuntime Returns Type Description IMoValue The value returned by the expression Overrides Expression.Evaluate(MoScope, MoLangEnvironment) | Improve this Doc View Source GetSigil() Declaration public override string GetSigil() Returns Type Description string Overrides BinaryOpExpression.GetSigil() Implements IExpression"
  },
  "api/ConcreteMC.MolangSharp.Parser.Expressions.BinaryOp.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Expressions.BinaryOp.html",
    "title": "Namespace ConcreteMC.MolangSharp.Parser.Expressions.BinaryOp",
    "keywords": "Namespace ConcreteMC.MolangSharp.Parser.Expressions.BinaryOp Classes ArrowExpression BooleanAndExpression BooleanOrExpression CoalesceExpression DivideExpression EqualExpression GreaterExpression GreaterOrEqualExpression MinusExpression NotEqualExpression PlusExpression PowExpression SmallerExpression SmallerOrEqualExpression"
  },
  "api/ConcreteMC.MolangSharp.Parser.Expressions.BinaryOp.MinusExpression.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Expressions.BinaryOp.MinusExpression.html",
    "title": "Class MinusExpression",
    "keywords": "Class MinusExpression Inheritance object Expression BinaryOpExpression MinusExpression Implements IExpression Inherited Members BinaryOpExpression.Left BinaryOpExpression.Right Expression.Parameters Expression.Meta Expression.Assign(MoScope, MoLangEnvironment, IMoValue) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Parser.Expressions.BinaryOp Assembly: ConcreteMC.MolangSharp.dll Syntax public class MinusExpression : BinaryOpExpression, IExpression Constructors | Improve this Doc View Source MinusExpression(IExpression, IExpression) Declaration public MinusExpression(IExpression l, IExpression r) Parameters Type Name Description IExpression l IExpression r Methods | Improve this Doc View Source Evaluate(MoScope, MoLangEnvironment) Evaluate the expression Declaration public override IMoValue Evaluate(MoScope scope, MoLangEnvironment environment) Parameters Type Name Description MoScope scope The current scope MoLangEnvironment environment The environment provided by the MoLangRuntime Returns Type Description IMoValue The value returned by the expression Overrides Expression.Evaluate(MoScope, MoLangEnvironment) | Improve this Doc View Source GetSigil() Declaration public override string GetSigil() Returns Type Description string Overrides BinaryOpExpression.GetSigil() Implements IExpression"
  },
  "api/ConcreteMC.MolangSharp.Parser.Expressions.BinaryOp.NotEqualExpression.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Expressions.BinaryOp.NotEqualExpression.html",
    "title": "Class NotEqualExpression",
    "keywords": "Class NotEqualExpression Inheritance object Expression BinaryOpExpression NotEqualExpression Implements IExpression Inherited Members BinaryOpExpression.Left BinaryOpExpression.Right Expression.Parameters Expression.Meta Expression.Assign(MoScope, MoLangEnvironment, IMoValue) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Parser.Expressions.BinaryOp Assembly: ConcreteMC.MolangSharp.dll Syntax public class NotEqualExpression : BinaryOpExpression, IExpression Constructors | Improve this Doc View Source NotEqualExpression(IExpression, IExpression) Declaration public NotEqualExpression(IExpression l, IExpression r) Parameters Type Name Description IExpression l IExpression r Methods | Improve this Doc View Source Evaluate(MoScope, MoLangEnvironment) Evaluate the expression Declaration public override IMoValue Evaluate(MoScope scope, MoLangEnvironment environment) Parameters Type Name Description MoScope scope The current scope MoLangEnvironment environment The environment provided by the MoLangRuntime Returns Type Description IMoValue The value returned by the expression Overrides Expression.Evaluate(MoScope, MoLangEnvironment) | Improve this Doc View Source GetSigil() Declaration public override string GetSigil() Returns Type Description string Overrides BinaryOpExpression.GetSigil() Implements IExpression"
  },
  "api/ConcreteMC.MolangSharp.Parser.Expressions.BinaryOp.PlusExpression.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Expressions.BinaryOp.PlusExpression.html",
    "title": "Class PlusExpression",
    "keywords": "Class PlusExpression Inheritance object Expression BinaryOpExpression PlusExpression Implements IExpression Inherited Members BinaryOpExpression.Left BinaryOpExpression.Right Expression.Parameters Expression.Meta Expression.Assign(MoScope, MoLangEnvironment, IMoValue) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Parser.Expressions.BinaryOp Assembly: ConcreteMC.MolangSharp.dll Syntax public class PlusExpression : BinaryOpExpression, IExpression Constructors | Improve this Doc View Source PlusExpression(IExpression, IExpression) Declaration public PlusExpression(IExpression l, IExpression r) Parameters Type Name Description IExpression l IExpression r Methods | Improve this Doc View Source Evaluate(MoScope, MoLangEnvironment) Evaluate the expression Declaration public override IMoValue Evaluate(MoScope scope, MoLangEnvironment environment) Parameters Type Name Description MoScope scope The current scope MoLangEnvironment environment The environment provided by the MoLangRuntime Returns Type Description IMoValue The value returned by the expression Overrides Expression.Evaluate(MoScope, MoLangEnvironment) | Improve this Doc View Source GetSigil() Declaration public override string GetSigil() Returns Type Description string Overrides BinaryOpExpression.GetSigil() Implements IExpression"
  },
  "api/ConcreteMC.MolangSharp.Parser.Expressions.BinaryOp.PowExpression.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Expressions.BinaryOp.PowExpression.html",
    "title": "Class PowExpression",
    "keywords": "Class PowExpression Inheritance object Expression BinaryOpExpression PowExpression Implements IExpression Inherited Members BinaryOpExpression.Left BinaryOpExpression.Right Expression.Parameters Expression.Meta Expression.Assign(MoScope, MoLangEnvironment, IMoValue) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Parser.Expressions.BinaryOp Assembly: ConcreteMC.MolangSharp.dll Syntax public class PowExpression : BinaryOpExpression, IExpression Constructors | Improve this Doc View Source PowExpression(IExpression, IExpression) Declaration public PowExpression(IExpression l, IExpression r) Parameters Type Name Description IExpression l IExpression r Methods | Improve this Doc View Source Evaluate(MoScope, MoLangEnvironment) Evaluate the expression Declaration public override IMoValue Evaluate(MoScope scope, MoLangEnvironment environment) Parameters Type Name Description MoScope scope The current scope MoLangEnvironment environment The environment provided by the MoLangRuntime Returns Type Description IMoValue The value returned by the expression Overrides Expression.Evaluate(MoScope, MoLangEnvironment) | Improve this Doc View Source GetSigil() Declaration public override string GetSigil() Returns Type Description string Overrides BinaryOpExpression.GetSigil() Implements IExpression"
  },
  "api/ConcreteMC.MolangSharp.Parser.Expressions.BinaryOp.SmallerExpression.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Expressions.BinaryOp.SmallerExpression.html",
    "title": "Class SmallerExpression",
    "keywords": "Class SmallerExpression Inheritance object Expression BinaryOpExpression SmallerExpression Implements IExpression Inherited Members BinaryOpExpression.Left BinaryOpExpression.Right Expression.Parameters Expression.Meta Expression.Assign(MoScope, MoLangEnvironment, IMoValue) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Parser.Expressions.BinaryOp Assembly: ConcreteMC.MolangSharp.dll Syntax public class SmallerExpression : BinaryOpExpression, IExpression Constructors | Improve this Doc View Source SmallerExpression(IExpression, IExpression) Declaration public SmallerExpression(IExpression l, IExpression r) Parameters Type Name Description IExpression l IExpression r Methods | Improve this Doc View Source Evaluate(MoScope, MoLangEnvironment) Evaluate the expression Declaration public override IMoValue Evaluate(MoScope scope, MoLangEnvironment environment) Parameters Type Name Description MoScope scope The current scope MoLangEnvironment environment The environment provided by the MoLangRuntime Returns Type Description IMoValue The value returned by the expression Overrides Expression.Evaluate(MoScope, MoLangEnvironment) | Improve this Doc View Source GetSigil() Declaration public override string GetSigil() Returns Type Description string Overrides BinaryOpExpression.GetSigil() Implements IExpression"
  },
  "api/ConcreteMC.MolangSharp.Parser.Expressions.BinaryOp.SmallerOrEqualExpression.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Expressions.BinaryOp.SmallerOrEqualExpression.html",
    "title": "Class SmallerOrEqualExpression",
    "keywords": "Class SmallerOrEqualExpression Inheritance object Expression BinaryOpExpression SmallerOrEqualExpression Implements IExpression Inherited Members BinaryOpExpression.Left BinaryOpExpression.Right Expression.Parameters Expression.Meta Expression.Assign(MoScope, MoLangEnvironment, IMoValue) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Parser.Expressions.BinaryOp Assembly: ConcreteMC.MolangSharp.dll Syntax public class SmallerOrEqualExpression : BinaryOpExpression, IExpression Constructors | Improve this Doc View Source SmallerOrEqualExpression(IExpression, IExpression) Declaration public SmallerOrEqualExpression(IExpression l, IExpression r) Parameters Type Name Description IExpression l IExpression r Methods | Improve this Doc View Source Evaluate(MoScope, MoLangEnvironment) Evaluate the expression Declaration public override IMoValue Evaluate(MoScope scope, MoLangEnvironment environment) Parameters Type Name Description MoScope scope The current scope MoLangEnvironment environment The environment provided by the MoLangRuntime Returns Type Description IMoValue The value returned by the expression Overrides Expression.Evaluate(MoScope, MoLangEnvironment) | Improve this Doc View Source GetSigil() Declaration public override string GetSigil() Returns Type Description string Overrides BinaryOpExpression.GetSigil() Implements IExpression"
  },
  "api/ConcreteMC.MolangSharp.Parser.Expressions.BinaryOpExpression.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Expressions.BinaryOpExpression.html",
    "title": "Class BinaryOpExpression",
    "keywords": "Class BinaryOpExpression Inheritance object Expression BinaryOpExpression ArrowExpression BooleanAndExpression BooleanOrExpression CoalesceExpression DivideExpression EqualExpression GreaterExpression GreaterOrEqualExpression MinusExpression NotEqualExpression PlusExpression PowExpression SmallerExpression SmallerOrEqualExpression Implements IExpression Inherited Members Expression.Parameters Expression.Meta Expression.Evaluate(MoScope, MoLangEnvironment) Expression.Assign(MoScope, MoLangEnvironment, IMoValue) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Parser.Expressions Assembly: ConcreteMC.MolangSharp.dll Syntax public abstract class BinaryOpExpression : Expression, IExpression Constructors | Improve this Doc View Source BinaryOpExpression(IExpression, IExpression) Declaration protected BinaryOpExpression(IExpression l, IExpression r) Parameters Type Name Description IExpression l IExpression r Properties | Improve this Doc View Source Left Declaration public IExpression Left { get; set; } Property Value Type Description IExpression | Improve this Doc View Source Right Declaration public IExpression Right { get; set; } Property Value Type Description IExpression Methods | Improve this Doc View Source GetSigil() Declaration public abstract string GetSigil() Returns Type Description string Implements IExpression"
  },
  "api/ConcreteMC.MolangSharp.Parser.Expressions.BooleanExpression.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Expressions.BooleanExpression.html",
    "title": "Class BooleanExpression",
    "keywords": "Class BooleanExpression Inheritance object Expression BooleanExpression Implements IExpression Inherited Members Expression.Parameters Expression.Meta Expression.Assign(MoScope, MoLangEnvironment, IMoValue) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Parser.Expressions Assembly: ConcreteMC.MolangSharp.dll Syntax public class BooleanExpression : Expression, IExpression Constructors | Improve this Doc View Source BooleanExpression(bool) Declaration public BooleanExpression(bool value) Parameters Type Name Description bool value Methods | Improve this Doc View Source Evaluate(MoScope, MoLangEnvironment) Evaluate the expression Declaration public override IMoValue Evaluate(MoScope scope, MoLangEnvironment environment) Parameters Type Name Description MoScope scope The current scope MoLangEnvironment environment The environment provided by the MoLangRuntime Returns Type Description IMoValue The value returned by the expression Overrides Expression.Evaluate(MoScope, MoLangEnvironment) Implements IExpression"
  },
  "api/ConcreteMC.MolangSharp.Parser.Expressions.BooleanNotExpression.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Expressions.BooleanNotExpression.html",
    "title": "Class BooleanNotExpression",
    "keywords": "Class BooleanNotExpression Inheritance object Expression BooleanNotExpression Implements IExpression Inherited Members Expression.Parameters Expression.Meta Expression.Assign(MoScope, MoLangEnvironment, IMoValue) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Parser.Expressions Assembly: ConcreteMC.MolangSharp.dll Syntax public class BooleanNotExpression : Expression, IExpression Constructors | Improve this Doc View Source BooleanNotExpression(IExpression) Declaration public BooleanNotExpression(IExpression value) Parameters Type Name Description IExpression value Methods | Improve this Doc View Source Evaluate(MoScope, MoLangEnvironment) Evaluate the expression Declaration public override IMoValue Evaluate(MoScope scope, MoLangEnvironment environment) Parameters Type Name Description MoScope scope The current scope MoLangEnvironment environment The environment provided by the MoLangRuntime Returns Type Description IMoValue The value returned by the expression Overrides Expression.Evaluate(MoScope, MoLangEnvironment) Implements IExpression"
  },
  "api/ConcreteMC.MolangSharp.Parser.Expressions.BreakExpression.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Expressions.BreakExpression.html",
    "title": "Class BreakExpression",
    "keywords": "Class BreakExpression Inheritance object Expression BreakExpression Implements IExpression Inherited Members Expression.Parameters Expression.Meta Expression.Assign(MoScope, MoLangEnvironment, IMoValue) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Parser.Expressions Assembly: ConcreteMC.MolangSharp.dll Syntax public class BreakExpression : Expression, IExpression Methods | Improve this Doc View Source Evaluate(MoScope, MoLangEnvironment) Evaluate the expression Declaration public override IMoValue Evaluate(MoScope scope, MoLangEnvironment environment) Parameters Type Name Description MoScope scope The current scope MoLangEnvironment environment The environment provided by the MoLangRuntime Returns Type Description IMoValue The value returned by the expression Overrides Expression.Evaluate(MoScope, MoLangEnvironment) Implements IExpression"
  },
  "api/ConcreteMC.MolangSharp.Parser.Expressions.ContinueExpression.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Expressions.ContinueExpression.html",
    "title": "Class ContinueExpression",
    "keywords": "Class ContinueExpression Inheritance object Expression ContinueExpression Implements IExpression Inherited Members Expression.Parameters Expression.Meta Expression.Assign(MoScope, MoLangEnvironment, IMoValue) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Parser.Expressions Assembly: ConcreteMC.MolangSharp.dll Syntax public class ContinueExpression : Expression, IExpression Methods | Improve this Doc View Source Evaluate(MoScope, MoLangEnvironment) Evaluate the expression Declaration public override IMoValue Evaluate(MoScope scope, MoLangEnvironment environment) Parameters Type Name Description MoScope scope The current scope MoLangEnvironment environment The environment provided by the MoLangRuntime Returns Type Description IMoValue The value returned by the expression Overrides Expression.Evaluate(MoScope, MoLangEnvironment) Implements IExpression"
  },
  "api/ConcreteMC.MolangSharp.Parser.Expressions.ForEachExpression.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Expressions.ForEachExpression.html",
    "title": "Class ForEachExpression",
    "keywords": "Class ForEachExpression Inheritance object Expression ForEachExpression Implements IExpression Inherited Members Expression.Parameters Expression.Meta Expression.Assign(MoScope, MoLangEnvironment, IMoValue) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Parser.Expressions Assembly: ConcreteMC.MolangSharp.dll Syntax public class ForEachExpression : Expression, IExpression Constructors | Improve this Doc View Source ForEachExpression(IExpression, IExpression, IExpression) Declaration public ForEachExpression(IExpression variable, IExpression array, IExpression body) Parameters Type Name Description IExpression variable IExpression array IExpression body Properties | Improve this Doc View Source Array Declaration public IExpression Array { get; } Property Value Type Description IExpression | Improve this Doc View Source Body Declaration public IExpression Body { get; } Property Value Type Description IExpression | Improve this Doc View Source Variable Declaration public IExpression Variable { get; } Property Value Type Description IExpression Methods | Improve this Doc View Source Evaluate(MoScope, MoLangEnvironment) Evaluate the expression Declaration public override IMoValue Evaluate(MoScope scope, MoLangEnvironment environment) Parameters Type Name Description MoScope scope The current scope MoLangEnvironment environment The environment provided by the MoLangRuntime Returns Type Description IMoValue The value returned by the expression Overrides Expression.Evaluate(MoScope, MoLangEnvironment) Implements IExpression"
  },
  "api/ConcreteMC.MolangSharp.Parser.Expressions.FuncCallExpression.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Expressions.FuncCallExpression.html",
    "title": "Class FuncCallExpression",
    "keywords": "Class FuncCallExpression Inheritance object Expression FuncCallExpression Implements IExpression Inherited Members Expression.Parameters Expression.Meta Expression.Assign(MoScope, MoLangEnvironment, IMoValue) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Parser.Expressions Assembly: ConcreteMC.MolangSharp.dll Syntax public class FuncCallExpression : Expression, IExpression Constructors | Improve this Doc View Source FuncCallExpression(MoPath, IExpression[]) Declaration public FuncCallExpression(MoPath name, IExpression[] args) Parameters Type Name Description MoPath name IExpression[] args Properties | Improve this Doc View Source Name Declaration public MoPath Name { get; set; } Property Value Type Description MoPath Methods | Improve this Doc View Source Evaluate(MoScope, MoLangEnvironment) Evaluate the expression Declaration public override IMoValue Evaluate(MoScope scope, MoLangEnvironment environment) Parameters Type Name Description MoScope scope The current scope MoLangEnvironment environment The environment provided by the MoLangRuntime Returns Type Description IMoValue The value returned by the expression Overrides Expression.Evaluate(MoScope, MoLangEnvironment) Implements IExpression"
  },
  "api/ConcreteMC.MolangSharp.Parser.Expressions.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Expressions.html",
    "title": "Namespace ConcreteMC.MolangSharp.Parser.Expressions",
    "keywords": "Namespace ConcreteMC.MolangSharp.Parser.Expressions Classes ArrayAccessExpression AssignExpression BinaryOpExpression BooleanExpression BooleanNotExpression BreakExpression ContinueExpression ForEachExpression FuncCallExpression LoopExpression NameExpression NumberExpression ReturnExpression ScriptExpression StatementExpression StringExpression TernaryExpression ThisExpression UnaryMinusExpression UnaryPlusExpression"
  },
  "api/ConcreteMC.MolangSharp.Parser.Expressions.LoopExpression.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Expressions.LoopExpression.html",
    "title": "Class LoopExpression",
    "keywords": "Class LoopExpression Inheritance object Expression LoopExpression Implements IExpression Inherited Members Expression.Parameters Expression.Meta Expression.Assign(MoScope, MoLangEnvironment, IMoValue) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Parser.Expressions Assembly: ConcreteMC.MolangSharp.dll Syntax public class LoopExpression : Expression, IExpression Constructors | Improve this Doc View Source LoopExpression(IExpression, IExpression) Declaration public LoopExpression(IExpression count, IExpression body) Parameters Type Name Description IExpression count IExpression body Properties | Improve this Doc View Source Body Declaration public IExpression Body { get; } Property Value Type Description IExpression | Improve this Doc View Source Count Declaration public IExpression Count { get; } Property Value Type Description IExpression Methods | Improve this Doc View Source Evaluate(MoScope, MoLangEnvironment) Evaluate the expression Declaration public override IMoValue Evaluate(MoScope scope, MoLangEnvironment environment) Parameters Type Name Description MoScope scope The current scope MoLangEnvironment environment The environment provided by the MoLangRuntime Returns Type Description IMoValue The value returned by the expression Overrides Expression.Evaluate(MoScope, MoLangEnvironment) Implements IExpression"
  },
  "api/ConcreteMC.MolangSharp.Parser.Expressions.NameExpression.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Expressions.NameExpression.html",
    "title": "Class NameExpression",
    "keywords": "Class NameExpression Inheritance object Expression NameExpression Implements IExpression Inherited Members Expression.Parameters Expression.Meta object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Parser.Expressions Assembly: ConcreteMC.MolangSharp.dll Syntax public class NameExpression : Expression, IExpression Constructors | Improve this Doc View Source NameExpression(MoPath) Declaration public NameExpression(MoPath path) Parameters Type Name Description MoPath path | Improve this Doc View Source NameExpression(string) Declaration public NameExpression(string value) Parameters Type Name Description string value Properties | Improve this Doc View Source Name Declaration public MoPath Name { get; set; } Property Value Type Description MoPath Methods | Improve this Doc View Source Assign(MoScope, MoLangEnvironment, IMoValue) Invoked when trying to assign a value to a property/field Declaration public override void Assign(MoScope scope, MoLangEnvironment environment, IMoValue value) Parameters Type Name Description MoScope scope The current scope MoLangEnvironment environment The environment provided by the MoLangRuntime IMoValue value The value to assign Overrides Expression.Assign(MoScope, MoLangEnvironment, IMoValue) | Improve this Doc View Source Evaluate(MoScope, MoLangEnvironment) Evaluate the expression Declaration public override IMoValue Evaluate(MoScope scope, MoLangEnvironment environment) Parameters Type Name Description MoScope scope The current scope MoLangEnvironment environment The environment provided by the MoLangRuntime Returns Type Description IMoValue The value returned by the expression Overrides Expression.Evaluate(MoScope, MoLangEnvironment) Implements IExpression"
  },
  "api/ConcreteMC.MolangSharp.Parser.Expressions.NumberExpression.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Expressions.NumberExpression.html",
    "title": "Class NumberExpression",
    "keywords": "Class NumberExpression Inheritance object Expression NumberExpression Implements IExpression Inherited Members Expression.Parameters Expression.Meta Expression.Assign(MoScope, MoLangEnvironment, IMoValue) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Parser.Expressions Assembly: ConcreteMC.MolangSharp.dll Syntax public class NumberExpression : Expression, IExpression Constructors | Improve this Doc View Source NumberExpression(IMoValue) Declaration public NumberExpression(IMoValue value) Parameters Type Name Description IMoValue value | Improve this Doc View Source NumberExpression(double) Declaration public NumberExpression(double value) Parameters Type Name Description double value Methods | Improve this Doc View Source Evaluate(MoScope, MoLangEnvironment) Evaluate the expression Declaration public override IMoValue Evaluate(MoScope scope, MoLangEnvironment environment) Parameters Type Name Description MoScope scope The current scope MoLangEnvironment environment The environment provided by the MoLangRuntime Returns Type Description IMoValue The value returned by the expression Overrides Expression.Evaluate(MoScope, MoLangEnvironment) Implements IExpression"
  },
  "api/ConcreteMC.MolangSharp.Parser.Expressions.ReturnExpression.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Expressions.ReturnExpression.html",
    "title": "Class ReturnExpression",
    "keywords": "Class ReturnExpression Inheritance object Expression ReturnExpression Implements IExpression Inherited Members Expression.Parameters Expression.Meta Expression.Assign(MoScope, MoLangEnvironment, IMoValue) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Parser.Expressions Assembly: ConcreteMC.MolangSharp.dll Syntax public class ReturnExpression : Expression, IExpression Constructors | Improve this Doc View Source ReturnExpression(IExpression) Declaration public ReturnExpression(IExpression value) Parameters Type Name Description IExpression value Methods | Improve this Doc View Source Evaluate(MoScope, MoLangEnvironment) Evaluate the expression Declaration public override IMoValue Evaluate(MoScope scope, MoLangEnvironment environment) Parameters Type Name Description MoScope scope The current scope MoLangEnvironment environment The environment provided by the MoLangRuntime Returns Type Description IMoValue The value returned by the expression Overrides Expression.Evaluate(MoScope, MoLangEnvironment) Implements IExpression"
  },
  "api/ConcreteMC.MolangSharp.Parser.Expressions.ScriptExpression.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Expressions.ScriptExpression.html",
    "title": "Class ScriptExpression",
    "keywords": "Class ScriptExpression Inheritance object Expression ScriptExpression Implements IExpression Inherited Members Expression.Parameters Expression.Meta Expression.Assign(MoScope, MoLangEnvironment, IMoValue) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Parser.Expressions Assembly: ConcreteMC.MolangSharp.dll Syntax public class ScriptExpression : Expression, IExpression Constructors | Improve this Doc View Source ScriptExpression(IExpression[]) Declaration public ScriptExpression(IExpression[] expressions) Parameters Type Name Description IExpression[] expressions Methods | Improve this Doc View Source Evaluate(MoScope, MoLangEnvironment) Evaluate the expression Declaration public override IMoValue Evaluate(MoScope scope, MoLangEnvironment environment) Parameters Type Name Description MoScope scope The current scope MoLangEnvironment environment The environment provided by the MoLangRuntime Returns Type Description IMoValue The value returned by the expression Overrides Expression.Evaluate(MoScope, MoLangEnvironment) Implements IExpression"
  },
  "api/ConcreteMC.MolangSharp.Parser.Expressions.StatementExpression.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Expressions.StatementExpression.html",
    "title": "Class StatementExpression",
    "keywords": "Class StatementExpression Inheritance object Expression StatementExpression Implements IExpression Inherited Members Expression.Parameters Expression.Meta Expression.Assign(MoScope, MoLangEnvironment, IMoValue) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Parser.Expressions Assembly: ConcreteMC.MolangSharp.dll Syntax public class StatementExpression : Expression, IExpression Constructors | Improve this Doc View Source StatementExpression(IExpression[]) Create a new instance of the class Declaration public StatementExpression(IExpression[] value) Parameters Type Name Description IExpression[] value Methods | Improve this Doc View Source Evaluate(MoScope, MoLangEnvironment) Evaluate the expression Declaration public override IMoValue Evaluate(MoScope scope, MoLangEnvironment environment) Parameters Type Name Description MoScope scope The current scope MoLangEnvironment environment The environment provided by the MoLangRuntime Returns Type Description IMoValue The value returned by the expression Overrides Expression.Evaluate(MoScope, MoLangEnvironment) Implements IExpression"
  },
  "api/ConcreteMC.MolangSharp.Parser.Expressions.StringExpression.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Expressions.StringExpression.html",
    "title": "Class StringExpression",
    "keywords": "Class StringExpression Inheritance object Expression StringExpression Implements IExpression Inherited Members Expression.Parameters Expression.Meta Expression.Assign(MoScope, MoLangEnvironment, IMoValue) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Parser.Expressions Assembly: ConcreteMC.MolangSharp.dll Syntax public class StringExpression : Expression, IExpression Constructors | Improve this Doc View Source StringExpression(string) Declaration public StringExpression(string value) Parameters Type Name Description string value Methods | Improve this Doc View Source Evaluate(MoScope, MoLangEnvironment) Evaluate the expression Declaration public override IMoValue Evaluate(MoScope scope, MoLangEnvironment environment) Parameters Type Name Description MoScope scope The current scope MoLangEnvironment environment The environment provided by the MoLangRuntime Returns Type Description IMoValue The value returned by the expression Overrides Expression.Evaluate(MoScope, MoLangEnvironment) Implements IExpression"
  },
  "api/ConcreteMC.MolangSharp.Parser.Expressions.TernaryExpression.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Expressions.TernaryExpression.html",
    "title": "Class TernaryExpression",
    "keywords": "Class TernaryExpression Inheritance object Expression TernaryExpression Implements IExpression Inherited Members Expression.Parameters Expression.Meta Expression.Assign(MoScope, MoLangEnvironment, IMoValue) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Parser.Expressions Assembly: ConcreteMC.MolangSharp.dll Syntax public class TernaryExpression : Expression, IExpression Constructors | Improve this Doc View Source TernaryExpression(IExpression, IExpression, IExpression) Declaration public TernaryExpression(IExpression condition, IExpression thenExpr, IExpression elseExpr) Parameters Type Name Description IExpression condition IExpression thenExpr IExpression elseExpr Properties | Improve this Doc View Source Condition Declaration public IExpression Condition { get; } Property Value Type Description IExpression | Improve this Doc View Source ElseExpr Declaration public IExpression ElseExpr { get; } Property Value Type Description IExpression | Improve this Doc View Source ThenExpr Declaration public IExpression ThenExpr { get; } Property Value Type Description IExpression Methods | Improve this Doc View Source Evaluate(MoScope, MoLangEnvironment) Evaluate the expression Declaration public override IMoValue Evaluate(MoScope scope, MoLangEnvironment environment) Parameters Type Name Description MoScope scope The current scope MoLangEnvironment environment The environment provided by the MoLangRuntime Returns Type Description IMoValue The value returned by the expression Overrides Expression.Evaluate(MoScope, MoLangEnvironment) Implements IExpression"
  },
  "api/ConcreteMC.MolangSharp.Parser.Expressions.ThisExpression.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Expressions.ThisExpression.html",
    "title": "Class ThisExpression",
    "keywords": "Class ThisExpression Inheritance object Expression ThisExpression Implements IExpression Inherited Members Expression.Parameters Expression.Meta Expression.Assign(MoScope, MoLangEnvironment, IMoValue) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Parser.Expressions Assembly: ConcreteMC.MolangSharp.dll Syntax public class ThisExpression : Expression, IExpression Constructors | Improve this Doc View Source ThisExpression() Declaration public ThisExpression() Methods | Improve this Doc View Source Evaluate(MoScope, MoLangEnvironment) Evaluate the expression Declaration public override IMoValue Evaluate(MoScope scope, MoLangEnvironment environment) Parameters Type Name Description MoScope scope The current scope MoLangEnvironment environment The environment provided by the MoLangRuntime Returns Type Description IMoValue The value returned by the expression Overrides Expression.Evaluate(MoScope, MoLangEnvironment) Implements IExpression"
  },
  "api/ConcreteMC.MolangSharp.Parser.Expressions.UnaryMinusExpression.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Expressions.UnaryMinusExpression.html",
    "title": "Class UnaryMinusExpression",
    "keywords": "Class UnaryMinusExpression Inheritance object Expression UnaryMinusExpression Implements IExpression Inherited Members Expression.Parameters Expression.Meta Expression.Assign(MoScope, MoLangEnvironment, IMoValue) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Parser.Expressions Assembly: ConcreteMC.MolangSharp.dll Syntax public class UnaryMinusExpression : Expression, IExpression Constructors | Improve this Doc View Source UnaryMinusExpression(IExpression) Declaration public UnaryMinusExpression(IExpression value) Parameters Type Name Description IExpression value Methods | Improve this Doc View Source Evaluate(MoScope, MoLangEnvironment) Evaluate the expression Declaration public override IMoValue Evaluate(MoScope scope, MoLangEnvironment environment) Parameters Type Name Description MoScope scope The current scope MoLangEnvironment environment The environment provided by the MoLangRuntime Returns Type Description IMoValue The value returned by the expression Overrides Expression.Evaluate(MoScope, MoLangEnvironment) Implements IExpression"
  },
  "api/ConcreteMC.MolangSharp.Parser.Expressions.UnaryPlusExpression.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Expressions.UnaryPlusExpression.html",
    "title": "Class UnaryPlusExpression",
    "keywords": "Class UnaryPlusExpression Inheritance object Expression UnaryPlusExpression Implements IExpression Inherited Members Expression.Parameters Expression.Meta Expression.Assign(MoScope, MoLangEnvironment, IMoValue) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Parser.Expressions Assembly: ConcreteMC.MolangSharp.dll Syntax public class UnaryPlusExpression : Expression, IExpression Constructors | Improve this Doc View Source UnaryPlusExpression(IExpression) Declaration public UnaryPlusExpression(IExpression value) Parameters Type Name Description IExpression value Methods | Improve this Doc View Source Evaluate(MoScope, MoLangEnvironment) Evaluate the expression Declaration public override IMoValue Evaluate(MoScope scope, MoLangEnvironment environment) Parameters Type Name Description MoScope scope The current scope MoLangEnvironment environment The environment provided by the MoLangRuntime Returns Type Description IMoValue The value returned by the expression Overrides Expression.Evaluate(MoScope, MoLangEnvironment) Implements IExpression"
  },
  "api/ConcreteMC.MolangSharp.Parser.ExpressionTraverser.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.ExpressionTraverser.html",
    "title": "Class ExpressionTraverser",
    "keywords": "Class ExpressionTraverser Traverses arrays of IExpression with IExpressionVisitor's Inheritance object ExpressionTraverser Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Parser Assembly: ConcreteMC.MolangSharp.dll Syntax public class ExpressionTraverser Fields | Improve this Doc View Source Visitors The list of IExpressionVisitor that will visit the traversed expressions Declaration public readonly List<IExpressionVisitor> Visitors Field Value Type Description List<IExpressionVisitor> Methods | Improve this Doc View Source Stop() Declaration public void Stop() | Improve this Doc View Source Traverse(IExpression[]) Traverse an array of expressions. Declaration public IExpression[] Traverse(IExpression[] expressions) Parameters Type Name Description IExpression[] expressions The array of expressions to visit Returns Type Description IExpression[] The traversed array of expressions"
  },
  "api/ConcreteMC.MolangSharp.Parser.ExpressionTraverser.VisitationResult.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.ExpressionTraverser.VisitationResult.html",
    "title": "Enum ExpressionTraverser.VisitationResult",
    "keywords": "Enum ExpressionTraverser.VisitationResult Namespace: ConcreteMC.MolangSharp.Parser Assembly: ConcreteMC.MolangSharp.dll Syntax [Flags] public enum ExpressionTraverser.VisitationResult Fields Name Description DontTraverseChildren DontTraverseCurrent DontTraverseCurrentAndChildren None RemoveCurrent StopTraversal"
  },
  "api/ConcreteMC.MolangSharp.Parser.ExpressionVisitor.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.ExpressionVisitor.html",
    "title": "Class ExpressionVisitor",
    "keywords": "Class ExpressionVisitor An abstract class that can be used as a base for any ExpressionVisitor Inheritance object ExpressionVisitor ExpressionConnectingVisitor FindingVisitor FirstFindingVisitor MathOptimizationVisitor Implements IExpressionVisitor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Parser Assembly: ConcreteMC.MolangSharp.dll Syntax public abstract class ExpressionVisitor : IExpressionVisitor Methods | Improve this Doc View Source AfterTraverse(IExpression[]) Invoked after all of the ExpressionVisitors have traversed an expression array Declaration public virtual void AfterTraverse(IExpression[] expressions) Parameters Type Name Description IExpression[] expressions The visited expression array | Improve this Doc View Source BeforeTraverse(IExpression[]) Invoked before any ExpressionVisitor has traversed expression array Declaration public virtual void BeforeTraverse(IExpression[] expressions) Parameters Type Name Description IExpression[] expressions The expressions to be traversed | Improve this Doc View Source OnLeave(IExpression) Invoked when all ExpressionVisitors have visited an expression Declaration public virtual void OnLeave(IExpression expression) Parameters Type Name Description IExpression expression The expressions that has been visited | Improve this Doc View Source OnVisit(ExpressionTraverser, IExpression) Invoked once for every IExpression Declaration public abstract IExpression OnVisit(ExpressionTraverser traverser, IExpression expression) Parameters Type Name Description ExpressionTraverser traverser The ExpressionTraverser that invoked the visitor IExpression expression The expressions to visit Returns Type Description IExpression The visited expression Implements IExpressionVisitor"
  },
  "api/ConcreteMC.MolangSharp.Parser.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.html",
    "title": "Namespace ConcreteMC.MolangSharp.Parser",
    "keywords": "Namespace ConcreteMC.MolangSharp.Parser Classes Expression An abstract base class for all Expressions ExpressionMeta Contains metadata about an expression ExpressionTraverser Traverses arrays of IExpression with IExpressionVisitor's ExpressionVisitor An abstract class that can be used as a base for any ExpressionVisitor Expression<T> InfixParselet MoLangParser The parser used to parse MoLang expressions PrefixParselet Interfaces IExpression The interface for all expressions to implement IExpressionVisitor The base interface for expression visitors. Enums ExpressionTraverser.VisitationResult Precedence Delegates MoLangParser.ParserFactory"
  },
  "api/ConcreteMC.MolangSharp.Parser.IExpression.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.IExpression.html",
    "title": "Interface IExpression",
    "keywords": "Interface IExpression The interface for all expressions to implement Namespace: ConcreteMC.MolangSharp.Parser Assembly: ConcreteMC.MolangSharp.dll Syntax public interface IExpression Properties | Improve this Doc View Source Meta Contains metadata about this expression Declaration ExpressionMeta Meta { get; } Property Value Type Description ExpressionMeta | Improve this Doc View Source Parameters The parameters used by this expression Declaration IExpression[] Parameters { get; set; } Property Value Type Description IExpression[] Methods | Improve this Doc View Source Assign(MoScope, MoLangEnvironment, IMoValue) Invoked when trying to assign a value to a property/field Declaration void Assign(MoScope scope, MoLangEnvironment environment, IMoValue value) Parameters Type Name Description MoScope scope The current scope MoLangEnvironment environment The environment provided by the MoLangRuntime IMoValue value The value to assign | Improve this Doc View Source Evaluate(MoScope, MoLangEnvironment) Evaluate the expression Declaration IMoValue Evaluate(MoScope scope, MoLangEnvironment environment) Parameters Type Name Description MoScope scope The current scope MoLangEnvironment environment The environment provided by the MoLangRuntime Returns Type Description IMoValue The value returned by the expression"
  },
  "api/ConcreteMC.MolangSharp.Parser.IExpressionVisitor.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.IExpressionVisitor.html",
    "title": "Interface IExpressionVisitor",
    "keywords": "Interface IExpressionVisitor The base interface for expression visitors. Namespace: ConcreteMC.MolangSharp.Parser Assembly: ConcreteMC.MolangSharp.dll Syntax public interface IExpressionVisitor Remarks Expression visitors are mainly used to optimize arrays of IExpression One such example is the MathOptimizationVisitor Methods | Improve this Doc View Source AfterTraverse(IExpression[]) Invoked after all of the ExpressionVisitors have traversed an expression array Declaration void AfterTraverse(IExpression[] expressions) Parameters Type Name Description IExpression[] expressions The visited expression array | Improve this Doc View Source BeforeTraverse(IExpression[]) Invoked before any ExpressionVisitor has traversed expression array Declaration void BeforeTraverse(IExpression[] expressions) Parameters Type Name Description IExpression[] expressions The expressions to be traversed | Improve this Doc View Source OnLeave(IExpression) Invoked when all ExpressionVisitors have visited an expression Declaration void OnLeave(IExpression expression) Parameters Type Name Description IExpression expression The expressions that has been visited | Improve this Doc View Source OnVisit(ExpressionTraverser, IExpression) Invoked once for every IExpression Declaration IExpression OnVisit(ExpressionTraverser traverser, IExpression expression) Parameters Type Name Description ExpressionTraverser traverser The ExpressionTraverser that invoked the visitor IExpression expression The expressions to visit Returns Type Description IExpression The visited expression"
  },
  "api/ConcreteMC.MolangSharp.Parser.InfixParselet.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.InfixParselet.html",
    "title": "Class InfixParselet",
    "keywords": "Class InfixParselet Inheritance object InfixParselet ArrayAccessParselet AssignParselet GenericBinaryOpParselet TernaryParselet Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Parser Assembly: ConcreteMC.MolangSharp.dll Syntax public abstract class InfixParselet Constructors | Improve this Doc View Source InfixParselet(Precedence) Declaration public InfixParselet(Precedence precedence) Parameters Type Name Description Precedence precedence Properties | Improve this Doc View Source Precedence Declaration public Precedence Precedence { get; protected set; } Property Value Type Description Precedence Methods | Improve this Doc View Source Parse(MoLangParser, Token, IExpression) Declaration public abstract IExpression Parse(MoLangParser parser, Token token, IExpression leftExpr) Parameters Type Name Description MoLangParser parser Token token IExpression leftExpr Returns Type Description IExpression"
  },
  "api/ConcreteMC.MolangSharp.Parser.MoLangParser.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.MoLangParser.html",
    "title": "Class MoLangParser",
    "keywords": "Class MoLangParser The parser used to parse MoLang expressions Inheritance object MoLangParser Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Parser Assembly: ConcreteMC.MolangSharp.dll Syntax public class MoLangParser Constructors | Improve this Doc View Source MoLangParser(ITokenIterator) Declaration public MoLangParser(ITokenIterator iterator) Parameters Type Name Description ITokenIterator iterator Properties | Improve this Doc View Source ExpressionTraverser The expression traverser executed after the parsing of the expressions Declaration public ExpressionTraverser ExpressionTraverser { get; } Property Value Type Description ExpressionTraverser | Improve this Doc View Source Factory The factory method used to provide instances of the MoLangParser Declaration public static MoLangParser.ParserFactory Factory { get; set; } Property Value Type Description MoLangParser.ParserFactory | Improve this Doc View Source TotalTimeSpent Declaration public static TimeSpan TotalTimeSpent { get; } Property Value Type Description TimeSpan Methods | Improve this Doc View Source Parse() Parses the tokens as provided by the TokenIterator Declaration public IExpression Parse() Returns Type Description IExpression An expression that can be executed by an instance of MoLangRuntime Exceptions Type Condition MoLangParserException | Improve this Doc View Source Parse(string) Parses a MoLang Expression using the parser provided by the Factory Declaration public static IExpression Parse(string input) Parameters Type Name Description string input The MoLang expression to parse Returns Type Description IExpression An array of expressions to be executed by MoLangRuntime"
  },
  "api/ConcreteMC.MolangSharp.Parser.MoLangParser.ParserFactory.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.MoLangParser.ParserFactory.html",
    "title": "Delegate MoLangParser.ParserFactory",
    "keywords": "Delegate MoLangParser.ParserFactory Namespace: ConcreteMC.MolangSharp.Parser Assembly: ConcreteMC.MolangSharp.dll Syntax public delegate MoLangParser MoLangParser.ParserFactory(ITokenIterator iterator) Parameters Type Name Description ITokenIterator iterator Returns Type Description MoLangParser"
  },
  "api/ConcreteMC.MolangSharp.Parser.Parselet.ArrayAccessParselet.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Parselet.ArrayAccessParselet.html",
    "title": "Class ArrayAccessParselet",
    "keywords": "Class ArrayAccessParselet Implements the indexer/array accessor parser Inheritance object InfixParselet ArrayAccessParselet Inherited Members InfixParselet.Precedence object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Parser.Parselet Assembly: ConcreteMC.MolangSharp.dll Syntax public class ArrayAccessParselet : InfixParselet Remarks Parses expressions such as \"array[0]\" Constructors | Improve this Doc View Source ArrayAccessParselet() Declaration public ArrayAccessParselet() Methods | Improve this Doc View Source Parse(MoLangParser, Token, IExpression) Declaration public override IExpression Parse(MoLangParser parser, Token token, IExpression leftExpr) Parameters Type Name Description MoLangParser parser Token token IExpression leftExpr Returns Type Description IExpression Overrides InfixParselet.Parse(MoLangParser, Token, IExpression)"
  },
  "api/ConcreteMC.MolangSharp.Parser.Parselet.AssignParselet.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Parselet.AssignParselet.html",
    "title": "Class AssignParselet",
    "keywords": "Class AssignParselet Implements the \"=\" parselet Inheritance object InfixParselet AssignParselet Inherited Members InfixParselet.Precedence object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Parser.Parselet Assembly: ConcreteMC.MolangSharp.dll Syntax public class AssignParselet : InfixParselet Constructors | Improve this Doc View Source AssignParselet() Declaration public AssignParselet() Methods | Improve this Doc View Source Parse(MoLangParser, Token, IExpression) Declaration public override IExpression Parse(MoLangParser parser, Token token, IExpression leftExpr) Parameters Type Name Description MoLangParser parser Token token IExpression leftExpr Returns Type Description IExpression Overrides InfixParselet.Parse(MoLangParser, Token, IExpression)"
  },
  "api/ConcreteMC.MolangSharp.Parser.Parselet.BooleanNotParselet.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Parselet.BooleanNotParselet.html",
    "title": "Class BooleanNotParselet",
    "keywords": "Class BooleanNotParselet Implements the \"!=\" parselet Inheritance object PrefixParselet BooleanNotParselet Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Parser.Parselet Assembly: ConcreteMC.MolangSharp.dll Syntax public class BooleanNotParselet : PrefixParselet Methods | Improve this Doc View Source Parse(MoLangParser, Token) Declaration public override IExpression Parse(MoLangParser parser, Token token) Parameters Type Name Description MoLangParser parser Token token Returns Type Description IExpression Overrides PrefixParselet.Parse(MoLangParser, Token)"
  },
  "api/ConcreteMC.MolangSharp.Parser.Parselet.BooleanParselet.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Parselet.BooleanParselet.html",
    "title": "Class BooleanParselet",
    "keywords": "Class BooleanParselet Implements the boolean parselet Inheritance object PrefixParselet BooleanParselet Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Parser.Parselet Assembly: ConcreteMC.MolangSharp.dll Syntax public class BooleanParselet : PrefixParselet Methods | Improve this Doc View Source Parse(MoLangParser, Token) Declaration public override IExpression Parse(MoLangParser parser, Token token) Parameters Type Name Description MoLangParser parser Token token Returns Type Description IExpression Overrides PrefixParselet.Parse(MoLangParser, Token)"
  },
  "api/ConcreteMC.MolangSharp.Parser.Parselet.BracketScopeParselet.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Parselet.BracketScopeParselet.html",
    "title": "Class BracketScopeParselet",
    "keywords": "Class BracketScopeParselet Implements the scope parselet Inheritance object PrefixParselet BracketScopeParselet Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Parser.Parselet Assembly: ConcreteMC.MolangSharp.dll Syntax public class BracketScopeParselet : PrefixParselet Methods | Improve this Doc View Source Parse(MoLangParser, Token) Declaration public override IExpression Parse(MoLangParser parser, Token token) Parameters Type Name Description MoLangParser parser Token token Returns Type Description IExpression Overrides PrefixParselet.Parse(MoLangParser, Token)"
  },
  "api/ConcreteMC.MolangSharp.Parser.Parselet.BreakParselet.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Parselet.BreakParselet.html",
    "title": "Class BreakParselet",
    "keywords": "Class BreakParselet Implements the \"break\" instruction parser Inheritance object PrefixParselet BreakParselet Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Parser.Parselet Assembly: ConcreteMC.MolangSharp.dll Syntax public class BreakParselet : PrefixParselet Methods | Improve this Doc View Source Parse(MoLangParser, Token) Declaration public override IExpression Parse(MoLangParser parser, Token token) Parameters Type Name Description MoLangParser parser Token token Returns Type Description IExpression Overrides PrefixParselet.Parse(MoLangParser, Token)"
  },
  "api/ConcreteMC.MolangSharp.Parser.Parselet.ContinueParselet.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Parselet.ContinueParselet.html",
    "title": "Class ContinueParselet",
    "keywords": "Class ContinueParselet Implements the \"continue\" instruction parser Inheritance object PrefixParselet ContinueParselet Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Parser.Parselet Assembly: ConcreteMC.MolangSharp.dll Syntax public class ContinueParselet : PrefixParselet Methods | Improve this Doc View Source Parse(MoLangParser, Token) Declaration public override IExpression Parse(MoLangParser parser, Token token) Parameters Type Name Description MoLangParser parser Token token Returns Type Description IExpression Overrides PrefixParselet.Parse(MoLangParser, Token)"
  },
  "api/ConcreteMC.MolangSharp.Parser.Parselet.FloatParselet.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Parselet.FloatParselet.html",
    "title": "Class FloatParselet",
    "keywords": "Class FloatParselet Implements Float parsing Inheritance object PrefixParselet FloatParselet Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Parser.Parselet Assembly: ConcreteMC.MolangSharp.dll Syntax public class FloatParselet : PrefixParselet Methods | Improve this Doc View Source Parse(MoLangParser, Token) Declaration public override IExpression Parse(MoLangParser parser, Token token) Parameters Type Name Description MoLangParser parser Token token Returns Type Description IExpression Overrides PrefixParselet.Parse(MoLangParser, Token)"
  },
  "api/ConcreteMC.MolangSharp.Parser.Parselet.ForEachParselet.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Parselet.ForEachParselet.html",
    "title": "Class ForEachParselet",
    "keywords": "Class ForEachParselet Implements the \"foreach\" instruction parser Inheritance object PrefixParselet ForEachParselet Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Parser.Parselet Assembly: ConcreteMC.MolangSharp.dll Syntax public class ForEachParselet : PrefixParselet Methods | Improve this Doc View Source Parse(MoLangParser, Token) Declaration public override IExpression Parse(MoLangParser parser, Token token) Parameters Type Name Description MoLangParser parser Token token Returns Type Description IExpression Overrides PrefixParselet.Parse(MoLangParser, Token)"
  },
  "api/ConcreteMC.MolangSharp.Parser.Parselet.GenericBinaryOpParselet.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Parselet.GenericBinaryOpParselet.html",
    "title": "Class GenericBinaryOpParselet",
    "keywords": "Class GenericBinaryOpParselet Generic binary operator parselet Inheritance object InfixParselet GenericBinaryOpParselet Inherited Members InfixParselet.Precedence object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Parser.Parselet Assembly: ConcreteMC.MolangSharp.dll Syntax public class GenericBinaryOpParselet : InfixParselet Constructors | Improve this Doc View Source GenericBinaryOpParselet(Precedence) Declaration public GenericBinaryOpParselet(Precedence precedence) Parameters Type Name Description Precedence precedence Methods | Improve this Doc View Source Parse(MoLangParser, Token, IExpression) Declaration public override IExpression Parse(MoLangParser parser, Token token, IExpression leftExpr) Parameters Type Name Description MoLangParser parser Token token IExpression leftExpr Returns Type Description IExpression Overrides InfixParselet.Parse(MoLangParser, Token, IExpression)"
  },
  "api/ConcreteMC.MolangSharp.Parser.Parselet.GroupParselet.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Parselet.GroupParselet.html",
    "title": "Class GroupParselet",
    "keywords": "Class GroupParselet Implements the \"group\" parselet Inheritance object PrefixParselet GroupParselet Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Parser.Parselet Assembly: ConcreteMC.MolangSharp.dll Syntax public class GroupParselet : PrefixParselet Methods | Improve this Doc View Source Parse(MoLangParser, Token) Declaration public override IExpression Parse(MoLangParser parser, Token token) Parameters Type Name Description MoLangParser parser Token token Returns Type Description IExpression Overrides PrefixParselet.Parse(MoLangParser, Token)"
  },
  "api/ConcreteMC.MolangSharp.Parser.Parselet.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Parselet.html",
    "title": "Namespace ConcreteMC.MolangSharp.Parser.Parselet",
    "keywords": "Namespace ConcreteMC.MolangSharp.Parser.Parselet Classes ArrayAccessParselet Implements the indexer/array accessor parser AssignParselet Implements the \"=\" parselet BooleanNotParselet Implements the \"!=\" parselet BooleanParselet Implements the boolean parselet BracketScopeParselet Implements the scope parselet BreakParselet Implements the \"break\" instruction parser ContinueParselet Implements the \"continue\" instruction parser FloatParselet Implements Float parsing ForEachParselet Implements the \"foreach\" instruction parser GenericBinaryOpParselet Generic binary operator parselet GroupParselet Implements the \"group\" parselet LoopParselet Implements the \"loop\" instruction parser NameParselet Implements the \"name\" parser NumberParselet Implements number parsing ReturnParselet Implements the \"return\" instruction parser StringParselet Implements the string parser TernaryParselet Implements the Ternary expression parser ThisParselet Implements the \"this\" instruction parser UnaryMinusParselet Implements the unary minus parser UnaryPlusParselet Implements the unary plus parser"
  },
  "api/ConcreteMC.MolangSharp.Parser.Parselet.LoopParselet.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Parselet.LoopParselet.html",
    "title": "Class LoopParselet",
    "keywords": "Class LoopParselet Implements the \"loop\" instruction parser Inheritance object PrefixParselet LoopParselet Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Parser.Parselet Assembly: ConcreteMC.MolangSharp.dll Syntax public class LoopParselet : PrefixParselet Methods | Improve this Doc View Source Parse(MoLangParser, Token) Declaration public override IExpression Parse(MoLangParser parser, Token token) Parameters Type Name Description MoLangParser parser Token token Returns Type Description IExpression Overrides PrefixParselet.Parse(MoLangParser, Token)"
  },
  "api/ConcreteMC.MolangSharp.Parser.Parselet.NameParselet.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Parselet.NameParselet.html",
    "title": "Class NameParselet",
    "keywords": "Class NameParselet Implements the \"name\" parser Inheritance object PrefixParselet NameParselet Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Parser.Parselet Assembly: ConcreteMC.MolangSharp.dll Syntax public class NameParselet : PrefixParselet Remarks Used to parse function calls or property accessors. For example: \"query.frame_time\" or \"math.min(10, 20)\" Methods | Improve this Doc View Source Parse(MoLangParser, Token) Declaration public override IExpression Parse(MoLangParser parser, Token token) Parameters Type Name Description MoLangParser parser Token token Returns Type Description IExpression Overrides PrefixParselet.Parse(MoLangParser, Token)"
  },
  "api/ConcreteMC.MolangSharp.Parser.Parselet.NumberParselet.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Parselet.NumberParselet.html",
    "title": "Class NumberParselet",
    "keywords": "Class NumberParselet Implements number parsing Inheritance object PrefixParselet NumberParselet Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Parser.Parselet Assembly: ConcreteMC.MolangSharp.dll Syntax public class NumberParselet : PrefixParselet Methods | Improve this Doc View Source Parse(MoLangParser, Token) Declaration public override IExpression Parse(MoLangParser parser, Token token) Parameters Type Name Description MoLangParser parser Token token Returns Type Description IExpression Overrides PrefixParselet.Parse(MoLangParser, Token)"
  },
  "api/ConcreteMC.MolangSharp.Parser.Parselet.ReturnParselet.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Parselet.ReturnParselet.html",
    "title": "Class ReturnParselet",
    "keywords": "Class ReturnParselet Implements the \"return\" instruction parser Inheritance object PrefixParselet ReturnParselet Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Parser.Parselet Assembly: ConcreteMC.MolangSharp.dll Syntax public class ReturnParselet : PrefixParselet Methods | Improve this Doc View Source Parse(MoLangParser, Token) Declaration public override IExpression Parse(MoLangParser parser, Token token) Parameters Type Name Description MoLangParser parser Token token Returns Type Description IExpression Overrides PrefixParselet.Parse(MoLangParser, Token)"
  },
  "api/ConcreteMC.MolangSharp.Parser.Parselet.StringParselet.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Parselet.StringParselet.html",
    "title": "Class StringParselet",
    "keywords": "Class StringParselet Implements the string parser Inheritance object PrefixParselet StringParselet Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Parser.Parselet Assembly: ConcreteMC.MolangSharp.dll Syntax public class StringParselet : PrefixParselet Methods | Improve this Doc View Source Parse(MoLangParser, Token) Declaration public override IExpression Parse(MoLangParser parser, Token token) Parameters Type Name Description MoLangParser parser Token token Returns Type Description IExpression Overrides PrefixParselet.Parse(MoLangParser, Token)"
  },
  "api/ConcreteMC.MolangSharp.Parser.Parselet.TernaryParselet.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Parselet.TernaryParselet.html",
    "title": "Class TernaryParselet",
    "keywords": "Class TernaryParselet Implements the Ternary expression parser Inheritance object InfixParselet TernaryParselet Inherited Members InfixParselet.Precedence object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Parser.Parselet Assembly: ConcreteMC.MolangSharp.dll Syntax public class TernaryParselet : InfixParselet Constructors | Improve this Doc View Source TernaryParselet() Declaration public TernaryParselet() Methods | Improve this Doc View Source Parse(MoLangParser, Token, IExpression) Declaration public override IExpression Parse(MoLangParser parser, Token token, IExpression leftExpr) Parameters Type Name Description MoLangParser parser Token token IExpression leftExpr Returns Type Description IExpression Overrides InfixParselet.Parse(MoLangParser, Token, IExpression)"
  },
  "api/ConcreteMC.MolangSharp.Parser.Parselet.ThisParselet.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Parselet.ThisParselet.html",
    "title": "Class ThisParselet",
    "keywords": "Class ThisParselet Implements the \"this\" instruction parser Inheritance object PrefixParselet ThisParselet Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Parser.Parselet Assembly: ConcreteMC.MolangSharp.dll Syntax public class ThisParselet : PrefixParselet Methods | Improve this Doc View Source Parse(MoLangParser, Token) Declaration public override IExpression Parse(MoLangParser parser, Token token) Parameters Type Name Description MoLangParser parser Token token Returns Type Description IExpression Overrides PrefixParselet.Parse(MoLangParser, Token)"
  },
  "api/ConcreteMC.MolangSharp.Parser.Parselet.UnaryMinusParselet.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Parselet.UnaryMinusParselet.html",
    "title": "Class UnaryMinusParselet",
    "keywords": "Class UnaryMinusParselet Implements the unary minus parser Inheritance object PrefixParselet UnaryMinusParselet Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Parser.Parselet Assembly: ConcreteMC.MolangSharp.dll Syntax public class UnaryMinusParselet : PrefixParselet Methods | Improve this Doc View Source Parse(MoLangParser, Token) Declaration public override IExpression Parse(MoLangParser parser, Token token) Parameters Type Name Description MoLangParser parser Token token Returns Type Description IExpression Overrides PrefixParselet.Parse(MoLangParser, Token)"
  },
  "api/ConcreteMC.MolangSharp.Parser.Parselet.UnaryPlusParselet.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Parselet.UnaryPlusParselet.html",
    "title": "Class UnaryPlusParselet",
    "keywords": "Class UnaryPlusParselet Implements the unary plus parser Inheritance object PrefixParselet UnaryPlusParselet Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Parser.Parselet Assembly: ConcreteMC.MolangSharp.dll Syntax public class UnaryPlusParselet : PrefixParselet Methods | Improve this Doc View Source Parse(MoLangParser, Token) Declaration public override IExpression Parse(MoLangParser parser, Token token) Parameters Type Name Description MoLangParser parser Token token Returns Type Description IExpression Overrides PrefixParselet.Parse(MoLangParser, Token)"
  },
  "api/ConcreteMC.MolangSharp.Parser.Precedence.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Precedence.html",
    "title": "Enum Precedence",
    "keywords": "Enum Precedence Namespace: ConcreteMC.MolangSharp.Parser Assembly: ConcreteMC.MolangSharp.dll Syntax public enum Precedence Fields Name Description And Anything ArrayAccess Arrow Assignment Coalesce Compare Conditional Or Prefix Product Scope Sum"
  },
  "api/ConcreteMC.MolangSharp.Parser.PrefixParselet.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.PrefixParselet.html",
    "title": "Class PrefixParselet",
    "keywords": "Class PrefixParselet Inheritance object PrefixParselet BooleanNotParselet BooleanParselet BracketScopeParselet BreakParselet ContinueParselet FloatParselet ForEachParselet GroupParselet LoopParselet NameParselet NumberParselet ReturnParselet StringParselet ThisParselet UnaryMinusParselet UnaryPlusParselet Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Parser Assembly: ConcreteMC.MolangSharp.dll Syntax public abstract class PrefixParselet Methods | Improve this Doc View Source Parse(MoLangParser, Token) Declaration public abstract IExpression Parse(MoLangParser parser, Token token) Parameters Type Name Description MoLangParser parser Token token Returns Type Description IExpression"
  },
  "api/ConcreteMC.MolangSharp.Parser.Tokenizer.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Tokenizer.html",
    "title": "Namespace ConcreteMC.MolangSharp.Parser.Tokenizer",
    "keywords": "Namespace ConcreteMC.MolangSharp.Parser.Tokenizer Classes Token A token is a piece of code in an expression TokenIterator TokenPosition Describes the position of a Token TokenType Interfaces ITokenIterator"
  },
  "api/ConcreteMC.MolangSharp.Parser.Tokenizer.ITokenIterator.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Tokenizer.ITokenIterator.html",
    "title": "Interface ITokenIterator",
    "keywords": "Interface ITokenIterator Namespace: ConcreteMC.MolangSharp.Parser.Tokenizer Assembly: ConcreteMC.MolangSharp.dll Syntax public interface ITokenIterator Methods | Improve this Doc View Source Next() Declaration Token Next() Returns Type Description Token | Improve this Doc View Source Step() Declaration void Step()"
  },
  "api/ConcreteMC.MolangSharp.Parser.Tokenizer.Token.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Tokenizer.Token.html",
    "title": "Class Token",
    "keywords": "Class Token A token is a piece of code in an expression Inheritance object Token Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Parser.Tokenizer Assembly: ConcreteMC.MolangSharp.dll Syntax public class Token Constructors | Improve this Doc View Source Token(TokenType, TokenPosition) Initializes a new token Declaration public Token(TokenType tokenType, TokenPosition position) Parameters Type Name Description TokenType tokenType TokenPosition position | Improve this Doc View Source Token(TokenType, string, TokenPosition) Initializes a new token Declaration public Token(TokenType tokenType, string text, TokenPosition position) Parameters Type Name Description TokenType tokenType string text TokenPosition position Properties | Improve this Doc View Source Position The position in the source expression that this token was found at Declaration public TokenPosition Position { get; } Property Value Type Description TokenPosition | Improve this Doc View Source Text The piece of code defining this token Declaration public string Text { get; } Property Value Type Description string | Improve this Doc View Source Type The type of this token Declaration public TokenType Type { get; } Property Value Type Description TokenType"
  },
  "api/ConcreteMC.MolangSharp.Parser.Tokenizer.TokenIterator.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Tokenizer.TokenIterator.html",
    "title": "Class TokenIterator",
    "keywords": "Class TokenIterator Inheritance object TokenIterator Implements ITokenIterator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Parser.Tokenizer Assembly: ConcreteMC.MolangSharp.dll Syntax public class TokenIterator : ITokenIterator Constructors | Improve this Doc View Source TokenIterator(string) Declaration public TokenIterator(string code) Parameters Type Name Description string code Methods | Improve this Doc View Source Next() Declaration public Token Next() Returns Type Description Token | Improve this Doc View Source Step() Declaration public void Step() Implements ITokenIterator"
  },
  "api/ConcreteMC.MolangSharp.Parser.Tokenizer.TokenPosition.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Tokenizer.TokenPosition.html",
    "title": "Class TokenPosition",
    "keywords": "Class TokenPosition Describes the position of a Token Inheritance object TokenPosition Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Parser.Tokenizer Assembly: ConcreteMC.MolangSharp.dll Syntax public class TokenPosition Constructors | Improve this Doc View Source TokenPosition(int, int, int, int) Declaration public TokenPosition(int lastStepLine, int currentLine, int lastStep, int index) Parameters Type Name Description int lastStepLine int currentLine int lastStep int index Properties | Improve this Doc View Source Index The character index of this token Declaration public int Index { get; } Property Value Type Description int | Improve this Doc View Source LineNumber The linenumber this token was found at Declaration public int LineNumber { get; } Property Value Type Description int"
  },
  "api/ConcreteMC.MolangSharp.Parser.Tokenizer.TokenType.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Tokenizer.TokenType.html",
    "title": "Class TokenType",
    "keywords": "Class TokenType Inheritance object TokenType Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Parser.Tokenizer Assembly: ConcreteMC.MolangSharp.dll Syntax public sealed class TokenType Fields | Improve this Doc View Source And Declaration public static readonly TokenType And Field Value Type Description TokenType | Improve this Doc View Source ArrayLeft Declaration public static readonly TokenType ArrayLeft Field Value Type Description TokenType | Improve this Doc View Source ArrayRight Declaration public static readonly TokenType ArrayRight Field Value Type Description TokenType | Improve this Doc View Source Arrow Declaration public static readonly TokenType Arrow Field Value Type Description TokenType | Improve this Doc View Source Assign Declaration public static readonly TokenType Assign Field Value Type Description TokenType | Improve this Doc View Source Asterisk Declaration public static readonly TokenType Asterisk Field Value Type Description TokenType | Improve this Doc View Source Bang Declaration public static readonly TokenType Bang Field Value Type Description TokenType | Improve this Doc View Source BracketLeft Declaration public static readonly TokenType BracketLeft Field Value Type Description TokenType | Improve this Doc View Source BracketRight Declaration public static readonly TokenType BracketRight Field Value Type Description TokenType | Improve this Doc View Source Break Declaration public static readonly TokenType Break Field Value Type Description TokenType | Improve this Doc View Source Coalesce Declaration public static readonly TokenType Coalesce Field Value Type Description TokenType | Improve this Doc View Source Colon Declaration public static readonly TokenType Colon Field Value Type Description TokenType | Improve this Doc View Source Comma Declaration public static readonly TokenType Comma Field Value Type Description TokenType | Improve this Doc View Source Continue Declaration public static readonly TokenType Continue Field Value Type Description TokenType | Improve this Doc View Source CurlyBracketLeft Declaration public static readonly TokenType CurlyBracketLeft Field Value Type Description TokenType | Improve this Doc View Source CurlyBracketRight Declaration public static readonly TokenType CurlyBracketRight Field Value Type Description TokenType | Improve this Doc View Source Eof Declaration public static readonly TokenType Eof Field Value Type Description TokenType | Improve this Doc View Source EqualsEquals Declaration public static readonly TokenType EqualsEquals Field Value Type Description TokenType | Improve this Doc View Source False Declaration public static readonly TokenType False Field Value Type Description TokenType | Improve this Doc View Source FloatingPointNumber Declaration public static readonly TokenType FloatingPointNumber Field Value Type Description TokenType | Improve this Doc View Source ForEach Declaration public static readonly TokenType ForEach Field Value Type Description TokenType | Improve this Doc View Source Greater Declaration public static readonly TokenType Greater Field Value Type Description TokenType | Improve this Doc View Source GreaterOrEquals Declaration public static readonly TokenType GreaterOrEquals Field Value Type Description TokenType | Improve this Doc View Source Loop Declaration public static readonly TokenType Loop Field Value Type Description TokenType | Improve this Doc View Source Minus Declaration public static readonly TokenType Minus Field Value Type Description TokenType | Improve this Doc View Source Name Declaration public static readonly TokenType Name Field Value Type Description TokenType | Improve this Doc View Source NotEquals Declaration public static readonly TokenType NotEquals Field Value Type Description TokenType | Improve this Doc View Source Number Declaration public static readonly TokenType Number Field Value Type Description TokenType | Improve this Doc View Source Or Declaration public static readonly TokenType Or Field Value Type Description TokenType | Improve this Doc View Source Plus Declaration public static readonly TokenType Plus Field Value Type Description TokenType | Improve this Doc View Source Question Declaration public static readonly TokenType Question Field Value Type Description TokenType | Improve this Doc View Source Return Declaration public static readonly TokenType Return Field Value Type Description TokenType | Improve this Doc View Source Semicolon Declaration public static readonly TokenType Semicolon Field Value Type Description TokenType | Improve this Doc View Source Slash Declaration public static readonly TokenType Slash Field Value Type Description TokenType | Improve this Doc View Source Smaller Declaration public static readonly TokenType Smaller Field Value Type Description TokenType | Improve this Doc View Source SmallerOrEquals Declaration public static readonly TokenType SmallerOrEquals Field Value Type Description TokenType | Improve this Doc View Source String Declaration public static readonly TokenType String Field Value Type Description TokenType | Improve this Doc View Source This Declaration public static readonly TokenType This Field Value Type Description TokenType | Improve this Doc View Source True Declaration public static readonly TokenType True Field Value Type Description TokenType Properties | Improve this Doc View Source Symbol A string \"identifying\" this tokentype Declaration public string Symbol { get; } Property Value Type Description string | Improve this Doc View Source TypeName A human readable identifier for this tokentype Declaration public string TypeName { get; } Property Value Type Description string Methods | Improve this Doc View Source BySymbol(char) Finds the TokenType by symbol Declaration public static TokenType BySymbol(char symbol) Parameters Type Name Description char symbol The symbol to lookup Returns Type Description TokenType The resulting TokenType or null if no match has been found | Improve this Doc View Source BySymbol(string) Finds the TokenType by symbol Declaration public static TokenType BySymbol(string symbol) Parameters Type Name Description string symbol The symbol to lookup Returns Type Description TokenType The resulting TokenType or null if no match has been found | Improve this Doc View Source Equals(TokenType) Checks if this tokentype is equal to Declaration public bool Equals(TokenType other) Parameters Type Name Description TokenType other Returns Type Description bool"
  },
  "api/ConcreteMC.MolangSharp.Parser.Visitors.ExpressionConnectingVisitor.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Visitors.ExpressionConnectingVisitor.html",
    "title": "Class ExpressionConnectingVisitor",
    "keywords": "Class ExpressionConnectingVisitor Inheritance object ExpressionVisitor ExpressionConnectingVisitor Implements IExpressionVisitor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Parser.Visitors Assembly: ConcreteMC.MolangSharp.dll Syntax public class ExpressionConnectingVisitor : ExpressionVisitor, IExpressionVisitor Methods | Improve this Doc View Source AfterTraverse(IExpression[]) Invoked after all of the ExpressionVisitors have traversed an expression array Declaration public override void AfterTraverse(IExpression[] expressions) Parameters Type Name Description IExpression[] expressions The visited expression array Overrides ExpressionVisitor.AfterTraverse(IExpression[]) | Improve this Doc View Source BeforeTraverse(IExpression[]) Invoked before any ExpressionVisitor has traversed expression array Declaration public override void BeforeTraverse(IExpression[] expressions) Parameters Type Name Description IExpression[] expressions The expressions to be traversed Overrides ExpressionVisitor.BeforeTraverse(IExpression[]) | Improve this Doc View Source OnLeave(IExpression) Invoked when all ExpressionVisitors have visited an expression Declaration public override void OnLeave(IExpression expression) Parameters Type Name Description IExpression expression The expressions that has been visited Overrides ExpressionVisitor.OnLeave(IExpression) | Improve this Doc View Source OnVisit(ExpressionTraverser, IExpression) Invoked once for every IExpression Declaration public override IExpression OnVisit(ExpressionTraverser traverser, IExpression expression) Parameters Type Name Description ExpressionTraverser traverser The ExpressionTraverser that invoked the visitor IExpression expression The expressions to visit Returns Type Description IExpression The visited expression Overrides ExpressionVisitor.OnVisit(ExpressionTraverser, IExpression) Implements IExpressionVisitor"
  },
  "api/ConcreteMC.MolangSharp.Parser.Visitors.FindingVisitor.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Visitors.FindingVisitor.html",
    "title": "Class FindingVisitor",
    "keywords": "Class FindingVisitor Inheritance object ExpressionVisitor FindingVisitor Implements IExpressionVisitor Inherited Members ExpressionVisitor.BeforeTraverse(IExpression[]) ExpressionVisitor.OnLeave(IExpression) ExpressionVisitor.AfterTraverse(IExpression[]) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Parser.Visitors Assembly: ConcreteMC.MolangSharp.dll Syntax public class FindingVisitor : ExpressionVisitor, IExpressionVisitor Constructors | Improve this Doc View Source FindingVisitor(Predicate<IExpression>) Declaration public FindingVisitor(Predicate<IExpression> predicate) Parameters Type Name Description Predicate<IExpression> predicate Fields | Improve this Doc View Source FoundExpressions Declaration public List<IExpression> FoundExpressions Field Value Type Description List<IExpression> Methods | Improve this Doc View Source OnVisit(ExpressionTraverser, IExpression) Invoked once for every IExpression Declaration public override IExpression OnVisit(ExpressionTraverser traverser, IExpression expression) Parameters Type Name Description ExpressionTraverser traverser The ExpressionTraverser that invoked the visitor IExpression expression The expressions to visit Returns Type Description IExpression The visited expression Overrides ExpressionVisitor.OnVisit(ExpressionTraverser, IExpression) Implements IExpressionVisitor"
  },
  "api/ConcreteMC.MolangSharp.Parser.Visitors.FirstFindingVisitor.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Visitors.FirstFindingVisitor.html",
    "title": "Class FirstFindingVisitor",
    "keywords": "Class FirstFindingVisitor Inheritance object ExpressionVisitor FirstFindingVisitor Implements IExpressionVisitor Inherited Members ExpressionVisitor.BeforeTraverse(IExpression[]) ExpressionVisitor.OnLeave(IExpression) ExpressionVisitor.AfterTraverse(IExpression[]) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Parser.Visitors Assembly: ConcreteMC.MolangSharp.dll Syntax public class FirstFindingVisitor : ExpressionVisitor, IExpressionVisitor Constructors | Improve this Doc View Source FirstFindingVisitor(Predicate<IExpression>) Declaration public FirstFindingVisitor(Predicate<IExpression> predicate) Parameters Type Name Description Predicate<IExpression> predicate Fields | Improve this Doc View Source Found Declaration public IExpression Found Field Value Type Description IExpression Methods | Improve this Doc View Source OnVisit(ExpressionTraverser, IExpression) Invoked once for every IExpression Declaration public override IExpression OnVisit(ExpressionTraverser traverser, IExpression expression) Parameters Type Name Description ExpressionTraverser traverser The ExpressionTraverser that invoked the visitor IExpression expression The expressions to visit Returns Type Description IExpression The visited expression Overrides ExpressionVisitor.OnVisit(ExpressionTraverser, IExpression) Implements IExpressionVisitor"
  },
  "api/ConcreteMC.MolangSharp.Parser.Visitors.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Visitors.html",
    "title": "Namespace ConcreteMC.MolangSharp.Parser.Visitors",
    "keywords": "Namespace ConcreteMC.MolangSharp.Parser.Visitors Classes ExpressionConnectingVisitor FindingVisitor FirstFindingVisitor MathOptimizationVisitor Optimizes expressions by pre-calculating constant maths"
  },
  "api/ConcreteMC.MolangSharp.Parser.Visitors.MathOptimizationVisitor.html": {
    "href": "api/ConcreteMC.MolangSharp.Parser.Visitors.MathOptimizationVisitor.html",
    "title": "Class MathOptimizationVisitor",
    "keywords": "Class MathOptimizationVisitor Optimizes expressions by pre-calculating constant maths Inheritance object ExpressionVisitor MathOptimizationVisitor Implements IExpressionVisitor Inherited Members ExpressionVisitor.BeforeTraverse(IExpression[]) ExpressionVisitor.OnLeave(IExpression) ExpressionVisitor.AfterTraverse(IExpression[]) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Parser.Visitors Assembly: ConcreteMC.MolangSharp.dll Syntax public class MathOptimizationVisitor : ExpressionVisitor, IExpressionVisitor Methods | Improve this Doc View Source OnVisit(ExpressionTraverser, IExpression) Invoked once for every IExpression Declaration public override IExpression OnVisit(ExpressionTraverser traverser, IExpression expression) Parameters Type Name Description ExpressionTraverser traverser The ExpressionTraverser that invoked the visitor IExpression expression The expressions to visit Returns Type Description IExpression The visited expression Overrides ExpressionVisitor.OnVisit(ExpressionTraverser, IExpression) Implements IExpressionVisitor"
  },
  "api/ConcreteMC.MolangSharp.Runtime.Exceptions.html": {
    "href": "api/ConcreteMC.MolangSharp.Runtime.Exceptions.html",
    "title": "Namespace ConcreteMC.MolangSharp.Runtime.Exceptions",
    "keywords": "Namespace ConcreteMC.MolangSharp.Runtime.Exceptions Classes MoLangRuntimeException Represents an error that occured during the execution of a MoLang expression"
  },
  "api/ConcreteMC.MolangSharp.Runtime.Exceptions.MoLangRuntimeException.html": {
    "href": "api/ConcreteMC.MolangSharp.Runtime.Exceptions.MoLangRuntimeException.html",
    "title": "Class MoLangRuntimeException",
    "keywords": "Class MoLangRuntimeException Represents an error that occured during the execution of a MoLang expression Inheritance object Exception MoLangRuntimeException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: ConcreteMC.MolangSharp.Runtime.Exceptions Assembly: ConcreteMC.MolangSharp.dll Syntax public class MoLangRuntimeException : Exception, ISerializable Constructors | Improve this Doc View Source MoLangRuntimeException(IExpression, string, Exception) Initializes a new instance of the MoLangRuntimeException class with a reference to the expression that the error occured at, an error message and a reference to the inner exception that is the cause of this exception. Declaration public MoLangRuntimeException(IExpression expression, string message, Exception baseException) Parameters Type Name Description IExpression expression The expression that this exception occured at string message The error message Exception baseException A reference to the inner exception that is the cause of this exception | Improve this Doc View Source MoLangRuntimeException(string) Initializes a new instance of the MoLangRuntimeException class with a specified error message. Declaration public MoLangRuntimeException(string message) Parameters Type Name Description string message The error message | Improve this Doc View Source MoLangRuntimeException(string, Exception) Initializes a new instance of the MoLangRuntimeException class with a specified error message and a reference to the inner exception that is the cause of this exception. Declaration public MoLangRuntimeException(string message, Exception baseException) Parameters Type Name Description string message The error message Exception baseException A reference to the inner exception that is the cause of this exception Properties | Improve this Doc View Source MolangTrace Contains a trace to where the exception occured in a MoLang expression. Declaration public string MolangTrace { get; } Property Value Type Description string Implements ISerializable"
  },
  "api/ConcreteMC.MolangSharp.Runtime.html": {
    "href": "api/ConcreteMC.MolangSharp.Runtime.html",
    "title": "Namespace ConcreteMC.MolangSharp.Runtime",
    "keywords": "Namespace ConcreteMC.MolangSharp.Runtime Classes MoLangEnvironment Provides an execution environment for the MoLangRuntime MoLangMath The default Math implementations for the MoLang runtime MoLangMathImpl The default Math implementations for the MoLang runtime MoLangRuntime The runtime used to execute an array of IExpression MoLangRuntimeConfiguration Global MoLang Runtime configuration options MoParams Represents the parameters passed to a function by the MoLang expression MoScope"
  },
  "api/ConcreteMC.MolangSharp.Runtime.MoLangEnvironment.html": {
    "href": "api/ConcreteMC.MolangSharp.Runtime.MoLangEnvironment.html",
    "title": "Class MoLangEnvironment",
    "keywords": "Class MoLangEnvironment Provides an execution environment for the MoLangRuntime Inheritance object MoLangEnvironment Implements IMoValue IEquatable<IMoValue> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Runtime Assembly: ConcreteMC.MolangSharp.dll Syntax public class MoLangEnvironment : IMoValue, IEquatable<IMoValue> Remarks An example of a MoLangEnvironment would be a minecraft entity. Constructors | Improve this Doc View Source MoLangEnvironment() Creates a new instance of the MoLangEnvironment class Declaration public MoLangEnvironment() Properties | Improve this Doc View Source Structs Declaration public Dictionary<string, IMoStruct> Structs { get; } Property Value Type Description Dictionary<string, IMoStruct> | Improve this Doc View Source ThisVariable The value that should be returned when an expression tries to access \"this\" Declaration public IMoValue ThisVariable { get; set; } Property Value Type Description IMoValue | Improve this Doc View Source Value Declaration public object Value { get; } Property Value Type Description object Methods | Improve this Doc View Source Equals(IMoValue) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(IMoValue b) Parameters Type Name Description IMoValue b Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. | Improve this Doc View Source GetValue(MoPath) Declaration public IMoValue GetValue(MoPath name) Parameters Type Name Description MoPath name Returns Type Description IMoValue | Improve this Doc View Source GetValue(MoPath, MoParams) Declaration public IMoValue GetValue(MoPath name, MoParams param) Parameters Type Name Description MoPath name MoParams param Returns Type Description IMoValue | Improve this Doc View Source SetValue(MoPath, IMoValue) Declaration public void SetValue(MoPath name, IMoValue value) Parameters Type Name Description MoPath name IMoValue value Implements IMoValue IEquatable<T>"
  },
  "api/ConcreteMC.MolangSharp.Runtime.MoLangMath.html": {
    "href": "api/ConcreteMC.MolangSharp.Runtime.MoLangMath.html",
    "title": "Class MoLangMath",
    "keywords": "Class MoLangMath The default Math implementations for the MoLang runtime Inheritance object MoLangMath Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Runtime Assembly: ConcreteMC.MolangSharp.dll Syntax public static class MoLangMath Fields | Improve this Doc View Source Library The Math library Declaration public static readonly QueryStruct Library Field Value Type Description QueryStruct Methods | Improve this Doc View Source DieRoll(double, double, double) Declaration public static double DieRoll(double num, double low, double high) Parameters Type Name Description double num double low double high Returns Type Description double | Improve this Doc View Source DieRollInt(int, int, int) Declaration public static int DieRollInt(int num, int low, int high) Parameters Type Name Description int num int low int high Returns Type Description int | Improve this Doc View Source HermiteBlend(int) Declaration public static int HermiteBlend(int value) Parameters Type Name Description int value Returns Type Description int | Improve this Doc View Source Lerp(double, double, double) Declaration public static double Lerp(double start, double end, double amount) Parameters Type Name Description double start double end double amount Returns Type Description double | Improve this Doc View Source LerpRotate(double, double, double) Declaration public static double LerpRotate(double start, double end, double amount) Parameters Type Name Description double start double end double amount Returns Type Description double | Improve this Doc View Source Radify(double) Declaration public static double Radify(double num) Parameters Type Name Description double num Returns Type Description double | Improve this Doc View Source Random(double, double) Declaration public static double Random(double low, double high) Parameters Type Name Description double low double high Returns Type Description double | Improve this Doc View Source RandomInt(int, int) Declaration public static int RandomInt(int low, int high) Parameters Type Name Description int low int high Returns Type Description int"
  },
  "api/ConcreteMC.MolangSharp.Runtime.MoLangMathImpl.html": {
    "href": "api/ConcreteMC.MolangSharp.Runtime.MoLangMathImpl.html",
    "title": "Class MoLangMathImpl",
    "keywords": "Class MoLangMathImpl The default Math implementations for the MoLang runtime Inheritance object MoLangMathImpl Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Runtime Assembly: ConcreteMC.MolangSharp.dll Syntax public sealed class MoLangMathImpl Properties | Improve this Doc View Source Library Declaration public static IMoStruct Library { get; } Property Value Type Description IMoStruct | Improve this Doc View Source PI Declaration [MoProperty(\"pi\")] public double PI { get; } Property Value Type Description double Methods | Improve this Doc View Source Abs(double) Declaration [MoFunction(new string[] { \"abs\" })] public double Abs(double value) Parameters Type Name Description double value Returns Type Description double | Improve this Doc View Source Acos(double) Declaration [MoFunction(new string[] { \"acos\" })] public double Acos(double value) Parameters Type Name Description double value Returns Type Description double | Improve this Doc View Source Asin(double) Declaration [MoFunction(new string[] { \"asin\" })] public double Asin(double value) Parameters Type Name Description double value Returns Type Description double | Improve this Doc View Source Atan(double) Declaration [MoFunction(new string[] { \"atan\" })] public double Atan(double value) Parameters Type Name Description double value Returns Type Description double | Improve this Doc View Source Atan2(double, double) Declaration [MoFunction(new string[] { \"atan2\" })] public double Atan2(double y, double x) Parameters Type Name Description double y double x Returns Type Description double | Improve this Doc View Source Ceiling(double) Declaration [MoFunction(new string[] { \"ceil\" })] public double Ceiling(double value) Parameters Type Name Description double value Returns Type Description double | Improve this Doc View Source Clamp(double, double, double) Declaration [MoFunction(new string[] { \"clamp\" })] public double Clamp(double value, double min, double max) Parameters Type Name Description double value double min double max Returns Type Description double | Improve this Doc View Source Cos(double) Declaration [MoFunction(new string[] { \"cos\" })] public double Cos(double value) Parameters Type Name Description double value Returns Type Description double | Improve this Doc View Source DieRoll(double, double, double) Declaration [MoFunction(new string[] { \"die_roll\" })] public double DieRoll(double num, double low, double high) Parameters Type Name Description double num double low double high Returns Type Description double | Improve this Doc View Source DieRollInt(int, int, int) Declaration [MoFunction(new string[] { \"die_roll_integer\" })] public int DieRollInt(int num, int low, int high) Parameters Type Name Description int num int low int high Returns Type Description int | Improve this Doc View Source Exp(double) Declaration [MoFunction(new string[] { \"exp\" })] public double Exp(double value) Parameters Type Name Description double value Returns Type Description double | Improve this Doc View Source Floor(double) Declaration [MoFunction(new string[] { \"floor\" })] public double Floor(double value) Parameters Type Name Description double value Returns Type Description double | Improve this Doc View Source HermiteBlend(int) Declaration [MoFunction(new string[] { \"hermite_blend\" })] public int HermiteBlend(int value) Parameters Type Name Description int value Returns Type Description int | Improve this Doc View Source Lerp(double, double, double) Declaration [MoFunction(new string[] { \"lerp\" })] public double Lerp(double start, double end, double amount) Parameters Type Name Description double start double end double amount Returns Type Description double | Improve this Doc View Source LerpRotate(double, double, double) Declaration [MoFunction(new string[] { \"lerp_rotate\" })] public double LerpRotate(double start, double end, double amount) Parameters Type Name Description double start double end double amount Returns Type Description double | Improve this Doc View Source Log(double) Declaration [MoFunction(new string[] { \"ln\" })] public double Log(double value) Parameters Type Name Description double value Returns Type Description double | Improve this Doc View Source Max(double, double) Declaration [MoFunction(new string[] { \"max\" })] public double Max(double value1, double value2) Parameters Type Name Description double value1 double value2 Returns Type Description double | Improve this Doc View Source Min(double, double) Declaration [MoFunction(new string[] { \"min\" })] public double Min(double value1, double value2) Parameters Type Name Description double value1 double value2 Returns Type Description double | Improve this Doc View Source Modulus(double, double) Declaration [MoFunction(new string[] { \"mod\" })] public double Modulus(double x, double y) Parameters Type Name Description double x double y Returns Type Description double | Improve this Doc View Source PiFunc() Declaration [MoFunction(new string[] { \"pi\" })] public double PiFunc() Returns Type Description double | Improve this Doc View Source Pow(double, double) Declaration [MoFunction(new string[] { \"pow\" })] public double Pow(double x, double y) Parameters Type Name Description double x double y Returns Type Description double | Improve this Doc View Source Radify(double) Declaration public double Radify(double num) Parameters Type Name Description double num Returns Type Description double | Improve this Doc View Source Random(double, double) Declaration [MoFunction(new string[] { \"random\" })] public double Random(double low, double high) Parameters Type Name Description double low double high Returns Type Description double | Improve this Doc View Source RandomInt(int, int) Declaration [MoFunction(new string[] { \"random_integer\" })] public int RandomInt(int low, int high) Parameters Type Name Description int low int high Returns Type Description int | Improve this Doc View Source Round(double) Declaration [MoFunction(new string[] { \"round\" })] public double Round(double value) Parameters Type Name Description double value Returns Type Description double | Improve this Doc View Source Sin(double) Declaration [MoFunction(new string[] { \"sin\" })] public double Sin(double value) Parameters Type Name Description double value Returns Type Description double | Improve this Doc View Source Sqrt(double) Declaration [MoFunction(new string[] { \"sqrt\" })] public double Sqrt(double value) Parameters Type Name Description double value Returns Type Description double | Improve this Doc View Source Truncate(double) Declaration [MoFunction(new string[] { \"trunc\" })] public double Truncate(double value) Parameters Type Name Description double value Returns Type Description double"
  },
  "api/ConcreteMC.MolangSharp.Runtime.MoLangRuntime.html": {
    "href": "api/ConcreteMC.MolangSharp.Runtime.MoLangRuntime.html",
    "title": "Class MoLangRuntime",
    "keywords": "Class MoLangRuntime The runtime used to execute an array of IExpression Inheritance object MoLangRuntime Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Runtime Assembly: ConcreteMC.MolangSharp.dll Syntax public sealed class MoLangRuntime Constructors | Improve this Doc View Source MoLangRuntime() Create a new instance of MoLangRuntime with a new MoLangEnvironment Declaration public MoLangRuntime() | Improve this Doc View Source MoLangRuntime(MoLangEnvironment) Create a new instance of MoLangRuntime Declaration public MoLangRuntime(MoLangEnvironment environment) Parameters Type Name Description MoLangEnvironment environment The environment used by this runtime instance Properties | Improve this Doc View Source Environment The environment associated with this runtime instance Declaration public MoLangEnvironment Environment { get; } Property Value Type Description MoLangEnvironment Methods | Improve this Doc View Source Execute(IExpression) Evaluates the expressions provided and returns the resulting value (if any) or Zero Declaration public IMoValue Execute(IExpression expressions) Parameters Type Name Description IExpression expressions The expressions to evaluate Returns Type Description IMoValue The value returned by the expression (if any) or Zero | Improve this Doc View Source Execute(IExpression, IDictionary<string, IMoValue>) Evaluates the expressions provided and returns the resulting value (if any) or Zero Declaration public IMoValue Execute(IExpression expression, IDictionary<string, IMoValue> context) Parameters Type Name Description IExpression expression The expression to evaluate IDictionary<string, IMoValue> context The context to use Returns Type Description IMoValue The value returned by the expression (if any) or Zero"
  },
  "api/ConcreteMC.MolangSharp.Runtime.MoLangRuntimeConfiguration.html": {
    "href": "api/ConcreteMC.MolangSharp.Runtime.MoLangRuntimeConfiguration.html",
    "title": "Class MoLangRuntimeConfiguration",
    "keywords": "Class MoLangRuntimeConfiguration Global MoLang Runtime configuration options Inheritance object MoLangRuntimeConfiguration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Runtime Assembly: ConcreteMC.MolangSharp.dll Syntax public static class MoLangRuntimeConfiguration Properties | Improve this Doc View Source UseDummyValuesInsteadOfExceptions If true, returns dummy values instead of throwing an exception when a variable is not found during runtime execution. (Experimental) Declaration public static bool UseDummyValuesInsteadOfExceptions { get; set; } Property Value Type Description bool | Improve this Doc View Source UseMoLangStackTrace If true (default) allows you to locate an exception in the MoLang script when a runtime exception is thrown. Declaration public static bool UseMoLangStackTrace { get; set; } Property Value Type Description bool"
  },
  "api/ConcreteMC.MolangSharp.Runtime.MoParams.html": {
    "href": "api/ConcreteMC.MolangSharp.Runtime.MoParams.html",
    "title": "Class MoParams",
    "keywords": "Class MoParams Represents the parameters passed to a function by the MoLang expression Inheritance object MoParams Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: ConcreteMC.MolangSharp.Runtime Assembly: ConcreteMC.MolangSharp.dll Syntax public class MoParams Constructors | Improve this Doc View Source MoParams(params IMoValue[]) Declaration public MoParams(params IMoValue[] param) Parameters Type Name Description IMoValue[] param Fields | Improve this Doc View Source Empty Declaration public static readonly MoParams Empty Field Value Type Description MoParams Methods | Improve this Doc View Source Contains(int) Check if the index as specified by index is available Declaration public bool Contains(int index) Parameters Type Name Description int index The index to check availability for Returns Type Description bool True if the index is available | Improve this Doc View Source Get(int) Gets the parameter at index and returns its value as an IMoValue Declaration public IMoValue Get(int index) Parameters Type Name Description int index The index of the parameter to retrieve Returns Type Description IMoValue The value at specified index | Improve this Doc View Source GetDouble(int) Gets the parameter at index and returns its value as a double Declaration public double GetDouble(int index) Parameters Type Name Description int index The index of the parameter to retrieve Returns Type Description double The value at specified index | Improve this Doc View Source GetEnv(int) Gets the parameter at index and returns its value as a MoLangEnvironment Declaration public MoLangEnvironment GetEnv(int index) Parameters Type Name Description int index The index of the parameter to retrieve Returns Type Description MoLangEnvironment The value at specified index | Improve this Doc View Source GetInt(int) Gets the parameter at index and returns its value as an int Declaration public int GetInt(int index) Parameters Type Name Description int index The index of the parameter to retrieve Returns Type Description int The value at specified index | Improve this Doc View Source GetParams() Get all parameters passed as an array Declaration public IMoValue[] GetParams() Returns Type Description IMoValue[] An array of IMoValue | Improve this Doc View Source GetString(int) Gets the parameter at index and returns its value as a string Declaration public string GetString(int index) Parameters Type Name Description int index The index of the parameter to retrieve Returns Type Description string The value at specified index | Improve this Doc View Source GetStruct(int) Gets the parameter at index and returns its value as a IMoStruct Declaration public IMoStruct GetStruct(int index) Parameters Type Name Description int index The index of the parameter to retrieve Returns Type Description IMoStruct The value at specified index | Improve this Doc View Source Get<T>(int) Get the typed value of a parameter at specified index Declaration public T Get<T>(int index) Parameters Type Name Description int index The index of the Returns Type Description T The parameter passed at index Type Parameters Name Description T The expected type Exceptions Type Condition MoLangRuntimeException | Improve this Doc View Source ToString() Returns a string that represents the current object. Declaration public override string ToString() Returns Type Description string A string that represents the current object. Overrides object.ToString()"
  },
  "api/ConcreteMC.MolangSharp.Runtime.MoScope.html": {
    "href": "api/ConcreteMC.MolangSharp.Runtime.MoScope.html",
    "title": "Class MoScope",
    "keywords": "Class MoScope Inheritance object MoScope Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Runtime Assembly: ConcreteMC.MolangSharp.dll Syntax public class MoScope Constructors | Improve this Doc View Source MoScope(MoLangRuntime) Declaration public MoScope(MoLangRuntime runtime) Parameters Type Name Description MoLangRuntime runtime Properties | Improve this Doc View Source IsBreak Declaration public bool IsBreak { get; set; } Property Value Type Description bool | Improve this Doc View Source IsContinue Declaration public bool IsContinue { get; set; } Property Value Type Description bool | Improve this Doc View Source ReturnValue Declaration public IMoValue ReturnValue { get; set; } Property Value Type Description IMoValue | Improve this Doc View Source Runtime Declaration public MoLangRuntime Runtime { get; set; } Property Value Type Description MoLangRuntime"
  },
  "api/ConcreteMC.MolangSharp.Runtime.Struct.ArrayStruct.html": {
    "href": "api/ConcreteMC.MolangSharp.Runtime.Struct.ArrayStruct.html",
    "title": "Class ArrayStruct",
    "keywords": "Class ArrayStruct Represents an array of values Inheritance object ArrayStruct Implements IMoStruct IMoValue IEquatable<IMoValue> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Runtime.Struct Assembly: ConcreteMC.MolangSharp.dll Syntax public class ArrayStruct : IMoStruct, IMoValue, IEquatable<IMoValue> Constructors | Improve this Doc View Source ArrayStruct() Initializes a new instance of the ArrayStruct class with no values. Declaration public ArrayStruct() | Improve this Doc View Source ArrayStruct(IEnumerable<IMoValue>) Initializes a new instance of the ArrayStruct class. Declaration public ArrayStruct(IEnumerable<IMoValue> values) Parameters Type Name Description IEnumerable<IMoValue> values The values this ArrayStruct contains Properties | Improve this Doc View Source this[int] Indexes the ArrayStruct Declaration public IMoValue this[int index] { get; set; } Parameters Type Name Description int index The index to get/set the value of Property Value Type Description IMoValue | Improve this Doc View Source Value Declaration public object Value { get; } Property Value Type Description object Methods | Improve this Doc View Source Clear() Clears the struct Declaration public void Clear() | Improve this Doc View Source Get(MoPath, MoParams) Get the value of a property Declaration public IMoValue Get(MoPath key, MoParams parameters) Parameters Type Name Description MoPath key The path of the property to get MoParams parameters The parameters used to retrieve the value Returns Type Description IMoValue The value of the property retrieved | Improve this Doc View Source Set(MoPath, IMoValue) Assign a value to a property Declaration public void Set(MoPath key, IMoValue value) Parameters Type Name Description MoPath key The path of the property to modify IMoValue value The value to set Implements IMoStruct IMoValue IEquatable<T>"
  },
  "api/ConcreteMC.MolangSharp.Runtime.Struct.ContextStruct.html": {
    "href": "api/ConcreteMC.MolangSharp.Runtime.Struct.ContextStruct.html",
    "title": "Class ContextStruct",
    "keywords": "Class ContextStruct Inheritance object VariableStruct ContextStruct Implements IMoStruct IMoValue IEquatable<IMoValue> Inherited Members VariableStruct.Map VariableStruct.Value VariableStruct.CreateNew() VariableStruct.Get(MoPath, MoParams) VariableStruct.Clear() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Runtime.Struct Assembly: ConcreteMC.MolangSharp.dll Syntax public class ContextStruct : VariableStruct, IMoStruct, IMoValue, IEquatable<IMoValue> Constructors | Improve this Doc View Source ContextStruct() Declaration public ContextStruct() | Improve this Doc View Source ContextStruct(IEnumerable<KeyValuePair<string, IMoValue>>) Declaration public ContextStruct(IEnumerable<KeyValuePair<string, IMoValue>> values) Parameters Type Name Description IEnumerable<KeyValuePair<string, IMoValue>> values Methods | Improve this Doc View Source Set(MoPath, IMoValue) Assign a value to a property Declaration public override void Set(MoPath key, IMoValue value) Parameters Type Name Description MoPath key The path of the property to modify IMoValue value The value to set Overrides VariableStruct.Set(MoPath, IMoValue) Implements IMoStruct IMoValue IEquatable<T>"
  },
  "api/ConcreteMC.MolangSharp.Runtime.Struct.html": {
    "href": "api/ConcreteMC.MolangSharp.Runtime.Struct.html",
    "title": "Namespace ConcreteMC.MolangSharp.Runtime.Struct",
    "keywords": "Namespace ConcreteMC.MolangSharp.Runtime.Struct Classes ArrayStruct Represents an array of values ContextStruct InteropStruct QueryStruct Represents a readonly query structure VariableArrayStruct VariableStruct Represents a dynamic variable Interfaces IMoStruct The interface used for all MoLang containers/structs"
  },
  "api/ConcreteMC.MolangSharp.Runtime.Struct.IMoStruct.html": {
    "href": "api/ConcreteMC.MolangSharp.Runtime.Struct.IMoStruct.html",
    "title": "Interface IMoStruct",
    "keywords": "Interface IMoStruct The interface used for all MoLang containers/structs Inherited Members IMoValue.Value IMoValue.AsString() IMoValue.AsDouble() IMoValue.AsFloat() IMoValue.AsBool() IEquatable<IMoValue>.Equals(IMoValue) Namespace: ConcreteMC.MolangSharp.Runtime.Struct Assembly: ConcreteMC.MolangSharp.dll Syntax public interface IMoStruct : IMoValue, IEquatable<IMoValue> Methods | Improve this Doc View Source Clear() Clears the struct Declaration void Clear() | Improve this Doc View Source Get(MoPath, MoParams) Get the value of a property Declaration IMoValue Get(MoPath key, MoParams parameters) Parameters Type Name Description MoPath key The path of the property to get MoParams parameters The parameters used to retrieve the value Returns Type Description IMoValue The value of the property retrieved | Improve this Doc View Source Set(MoPath, IMoValue) Assign a value to a property Declaration void Set(MoPath key, IMoValue value) Parameters Type Name Description MoPath key The path of the property to modify IMoValue value The value to set"
  },
  "api/ConcreteMC.MolangSharp.Runtime.Struct.Interop.FieldAccessor.html": {
    "href": "api/ConcreteMC.MolangSharp.Runtime.Struct.Interop.FieldAccessor.html",
    "title": "Class FieldAccessor",
    "keywords": "Class FieldAccessor Inheritance object ValueAccessor FieldAccessor Inherited Members ValueAccessor.ValueChanged ValueAccessor.Observable ValueAccessor.InvokeChanged() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Runtime.Struct.Interop Assembly: ConcreteMC.MolangSharp.dll Syntax public class FieldAccessor : ValueAccessor Constructors | Improve this Doc View Source FieldAccessor(FieldInfo) Declaration public FieldAccessor(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Properties | Improve this Doc View Source CanRead Declaration public override bool CanRead { get; } Property Value Type Description bool Overrides ValueAccessor.CanRead | Improve this Doc View Source CanWrite Declaration public override bool CanWrite { get; } Property Value Type Description bool Overrides ValueAccessor.CanWrite Methods | Improve this Doc View Source Get(object) Declaration public override IMoValue Get(object instance) Parameters Type Name Description object instance Returns Type Description IMoValue Overrides ValueAccessor.Get(object) | Improve this Doc View Source Set(object, IMoValue) Declaration public override void Set(object instance, IMoValue value) Parameters Type Name Description object instance IMoValue value Overrides ValueAccessor.Set(object, IMoValue)"
  },
  "api/ConcreteMC.MolangSharp.Runtime.Struct.Interop.html": {
    "href": "api/ConcreteMC.MolangSharp.Runtime.Struct.Interop.html",
    "title": "Namespace ConcreteMC.MolangSharp.Runtime.Struct.Interop",
    "keywords": "Namespace ConcreteMC.MolangSharp.Runtime.Struct.Interop Classes FieldAccessor PropertyAccessor PropertyCache ValueAccessor"
  },
  "api/ConcreteMC.MolangSharp.Runtime.Struct.Interop.PropertyAccessor.html": {
    "href": "api/ConcreteMC.MolangSharp.Runtime.Struct.Interop.PropertyAccessor.html",
    "title": "Class PropertyAccessor",
    "keywords": "Class PropertyAccessor Inheritance object ValueAccessor PropertyAccessor Inherited Members ValueAccessor.ValueChanged ValueAccessor.Observable ValueAccessor.InvokeChanged() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Runtime.Struct.Interop Assembly: ConcreteMC.MolangSharp.dll Syntax public class PropertyAccessor : ValueAccessor Constructors | Improve this Doc View Source PropertyAccessor(PropertyInfo) Declaration public PropertyAccessor(PropertyInfo propertyInfo) Parameters Type Name Description PropertyInfo propertyInfo Properties | Improve this Doc View Source CanRead Declaration public override bool CanRead { get; } Property Value Type Description bool Overrides ValueAccessor.CanRead | Improve this Doc View Source CanWrite Declaration public override bool CanWrite { get; } Property Value Type Description bool Overrides ValueAccessor.CanWrite Methods | Improve this Doc View Source Get(object) Declaration public override IMoValue Get(object instance) Parameters Type Name Description object instance Returns Type Description IMoValue Overrides ValueAccessor.Get(object) | Improve this Doc View Source Set(object, IMoValue) Declaration public override void Set(object instance, IMoValue value) Parameters Type Name Description object instance IMoValue value Overrides ValueAccessor.Set(object, IMoValue)"
  },
  "api/ConcreteMC.MolangSharp.Runtime.Struct.Interop.PropertyCache.html": {
    "href": "api/ConcreteMC.MolangSharp.Runtime.Struct.Interop.PropertyCache.html",
    "title": "Class PropertyCache",
    "keywords": "Class PropertyCache Inheritance object PropertyCache Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Runtime.Struct.Interop Assembly: ConcreteMC.MolangSharp.dll Syntax public class PropertyCache Constructors | Improve this Doc View Source PropertyCache(Type) Declaration public PropertyCache(Type arg) Parameters Type Name Description Type arg Fields | Improve this Doc View Source Functions Declaration public readonly IReadOnlyDictionary<string, Func<object, MoParams, IMoValue>> Functions Field Value Type Description IReadOnlyDictionary<string, Func<object, MoParams, IMoValue>> | Improve this Doc View Source Properties Declaration public readonly IReadOnlyDictionary<string, ValueAccessor> Properties Field Value Type Description IReadOnlyDictionary<string, ValueAccessor>"
  },
  "api/ConcreteMC.MolangSharp.Runtime.Struct.Interop.ValueAccessor.html": {
    "href": "api/ConcreteMC.MolangSharp.Runtime.Struct.Interop.ValueAccessor.html",
    "title": "Class ValueAccessor",
    "keywords": "Class ValueAccessor Inheritance object ValueAccessor FieldAccessor PropertyAccessor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Runtime.Struct.Interop Assembly: ConcreteMC.MolangSharp.dll Syntax public abstract class ValueAccessor Properties | Improve this Doc View Source CanRead Declaration public abstract bool CanRead { get; } Property Value Type Description bool | Improve this Doc View Source CanWrite Declaration public abstract bool CanWrite { get; } Property Value Type Description bool | Improve this Doc View Source Observable Declaration public bool Observable { get; } Property Value Type Description bool Methods | Improve this Doc View Source Get(object) Declaration public abstract IMoValue Get(object instance) Parameters Type Name Description object instance Returns Type Description IMoValue | Improve this Doc View Source InvokeChanged() Declaration protected void InvokeChanged() | Improve this Doc View Source Set(object, IMoValue) Declaration public abstract void Set(object instance, IMoValue value) Parameters Type Name Description object instance IMoValue value Events | Improve this Doc View Source ValueChanged Declaration public event EventHandler ValueChanged Event Type Type Description EventHandler"
  },
  "api/ConcreteMC.MolangSharp.Runtime.Struct.InteropStruct.html": {
    "href": "api/ConcreteMC.MolangSharp.Runtime.Struct.InteropStruct.html",
    "title": "Class InteropStruct",
    "keywords": "Class InteropStruct Inheritance object InteropStruct Implements IMoStruct IMoValue IEquatable<IMoValue> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Runtime.Struct Assembly: ConcreteMC.MolangSharp.dll Syntax public class InteropStruct : IMoStruct, IMoValue, IEquatable<IMoValue> Constructors | Improve this Doc View Source InteropStruct(object) Declaration public InteropStruct(object instance) Parameters Type Name Description object instance Properties | Improve this Doc View Source Value Declaration public object Value { get; } Property Value Type Description object Methods | Improve this Doc View Source Clear() Clears the struct Declaration public void Clear() | Improve this Doc View Source Get(MoPath, MoParams) Get the value of a property Declaration public IMoValue Get(MoPath key, MoParams parameters) Parameters Type Name Description MoPath key The path of the property to get MoParams parameters The parameters used to retrieve the value Returns Type Description IMoValue The value of the property retrieved | Improve this Doc View Source Set(MoPath, IMoValue) Assign a value to a property Declaration public void Set(MoPath key, IMoValue value) Parameters Type Name Description MoPath key The path of the property to modify IMoValue value The value to set Implements IMoStruct IMoValue IEquatable<T>"
  },
  "api/ConcreteMC.MolangSharp.Runtime.Struct.QueryStruct.html": {
    "href": "api/ConcreteMC.MolangSharp.Runtime.Struct.QueryStruct.html",
    "title": "Class QueryStruct",
    "keywords": "Class QueryStruct Represents a readonly query structure Inheritance object QueryStruct Implements IMoStruct IMoValue IEquatable<IMoValue> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Runtime.Struct Assembly: ConcreteMC.MolangSharp.dll Syntax public class QueryStruct : IMoStruct, IMoValue, IEquatable<IMoValue> Constructors | Improve this Doc View Source QueryStruct() Declaration public QueryStruct() | Improve this Doc View Source QueryStruct(IEnumerable<KeyValuePair<string, Func<MoParams, object>>>) Declaration public QueryStruct(IEnumerable<KeyValuePair<string, Func<MoParams, object>>> parameters) Parameters Type Name Description IEnumerable<KeyValuePair<string, Func<MoParams, object>>> parameters Fields | Improve this Doc View Source Functions Declaration protected readonly IDictionary<string, Func<MoParams, object>> Functions Field Value Type Description IDictionary<string, Func<MoParams, object>> Properties | Improve this Doc View Source Value Declaration public object Value { get; } Property Value Type Description object Methods | Improve this Doc View Source Clear() Clears the struct Declaration public void Clear() | Improve this Doc View Source Get(MoPath, MoParams) Get the value of a property Declaration public IMoValue Get(MoPath key, MoParams parameters) Parameters Type Name Description MoPath key The path of the property to get MoParams parameters The parameters used to retrieve the value Returns Type Description IMoValue The value of the property retrieved | Improve this Doc View Source Set(MoPath, IMoValue) Assign a value to a property Declaration public void Set(MoPath key, IMoValue value) Parameters Type Name Description MoPath key The path of the property to modify IMoValue value The value to set Implements IMoStruct IMoValue IEquatable<T>"
  },
  "api/ConcreteMC.MolangSharp.Runtime.Struct.VariableArrayStruct.html": {
    "href": "api/ConcreteMC.MolangSharp.Runtime.Struct.VariableArrayStruct.html",
    "title": "Class VariableArrayStruct",
    "keywords": "Class VariableArrayStruct Inheritance object VariableStruct VariableArrayStruct Implements IMoStruct IMoValue IEquatable<IMoValue> Inherited Members VariableStruct.Map VariableStruct.Value VariableStruct.Set(MoPath, IMoValue) VariableStruct.Get(MoPath, MoParams) VariableStruct.Clear() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Runtime.Struct Assembly: ConcreteMC.MolangSharp.dll Syntax public class VariableArrayStruct : VariableStruct, IMoStruct, IMoValue, IEquatable<IMoValue> Methods | Improve this Doc View Source CreateNew() Declaration protected override IMoStruct CreateNew() Returns Type Description IMoStruct Overrides VariableStruct.CreateNew() Implements IMoStruct IMoValue IEquatable<T>"
  },
  "api/ConcreteMC.MolangSharp.Runtime.Struct.VariableStruct.html": {
    "href": "api/ConcreteMC.MolangSharp.Runtime.Struct.VariableStruct.html",
    "title": "Class VariableStruct",
    "keywords": "Class VariableStruct Represents a dynamic variable Inheritance object VariableStruct ContextStruct VariableArrayStruct Implements IMoStruct IMoValue IEquatable<IMoValue> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Runtime.Struct Assembly: ConcreteMC.MolangSharp.dll Syntax public class VariableStruct : IMoStruct, IMoValue, IEquatable<IMoValue> Constructors | Improve this Doc View Source VariableStruct() Declaration public VariableStruct() | Improve this Doc View Source VariableStruct(IEnumerable<KeyValuePair<string, IMoValue>>) Declaration public VariableStruct(IEnumerable<KeyValuePair<string, IMoValue>> values) Parameters Type Name Description IEnumerable<KeyValuePair<string, IMoValue>> values Properties | Improve this Doc View Source Map Declaration public IDictionary<string, IMoValue> Map { get; protected set; } Property Value Type Description IDictionary<string, IMoValue> | Improve this Doc View Source Value Declaration public object Value { get; } Property Value Type Description object Methods | Improve this Doc View Source Clear() Clears the struct Declaration public void Clear() | Improve this Doc View Source CreateNew() Declaration protected virtual IMoStruct CreateNew() Returns Type Description IMoStruct | Improve this Doc View Source Get(MoPath, MoParams) Get the value of a property Declaration public virtual IMoValue Get(MoPath key, MoParams parameters) Parameters Type Name Description MoPath key The path of the property to get MoParams parameters The parameters used to retrieve the value Returns Type Description IMoValue The value of the property retrieved | Improve this Doc View Source Set(MoPath, IMoValue) Assign a value to a property Declaration public virtual void Set(MoPath key, IMoValue value) Parameters Type Name Description MoPath key The path of the property to modify IMoValue value The value to set Implements IMoStruct IMoValue IEquatable<T>"
  },
  "api/ConcreteMC.MolangSharp.Runtime.Value.DoubleValue.html": {
    "href": "api/ConcreteMC.MolangSharp.Runtime.Value.DoubleValue.html",
    "title": "Class DoubleValue",
    "keywords": "Class DoubleValue Represents a double-precision floating-point number Inheritance object DoubleValue Implements IMoValue IEquatable<IMoValue> Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Runtime.Value Assembly: ConcreteMC.MolangSharp.dll Syntax public class DoubleValue : IMoValue, IEquatable<IMoValue> Constructors | Improve this Doc View Source DoubleValue(bool) Declaration public DoubleValue(bool value) Parameters Type Name Description bool value | Improve this Doc View Source DoubleValue(double) Declaration public DoubleValue(double value) Parameters Type Name Description double value | Improve this Doc View Source DoubleValue(object) Declaration public DoubleValue(object value) Parameters Type Name Description object value Properties | Improve this Doc View Source One Declaration public static DoubleValue One { get; } Property Value Type Description DoubleValue | Improve this Doc View Source Value Declaration public double Value { get; } Property Value Type Description double | Improve this Doc View Source Zero Declaration public static DoubleValue Zero { get; } Property Value Type Description DoubleValue Methods | Improve this Doc View Source AsDouble() Declaration public double AsDouble() Returns Type Description double | Improve this Doc View Source AsFloat() Declaration public float AsFloat() Returns Type Description float | Improve this Doc View Source Equals(DoubleValue) Declaration public bool Equals(DoubleValue other) Parameters Type Name Description DoubleValue other Returns Type Description bool | Improve this Doc View Source Equals(IMoValue) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(IMoValue b) Parameters Type Name Description IMoValue b Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. | Improve this Doc View Source Equals(object) Determines whether the specified object is equal to the current object. Declaration public override bool Equals(object obj) Parameters Type Name Description object obj The object to compare with the current object. Returns Type Description bool true if the specified object is equal to the current object; otherwise, false. Overrides object.Equals(object) | Improve this Doc View Source GetHashCode() Serves as the default hash function. Declaration public override int GetHashCode() Returns Type Description int A hash code for the current object. Overrides object.GetHashCode() Implements IMoValue IEquatable<T>"
  },
  "api/ConcreteMC.MolangSharp.Runtime.Value.html": {
    "href": "api/ConcreteMC.MolangSharp.Runtime.Value.html",
    "title": "Namespace ConcreteMC.MolangSharp.Runtime.Value",
    "keywords": "Namespace ConcreteMC.MolangSharp.Runtime.Value Classes DoubleValue Represents a double-precision floating-point number MoValue StringValue Represents a string value Interfaces IMoValue Resembles a MoLang compatible value."
  },
  "api/ConcreteMC.MolangSharp.Runtime.Value.IMoValue.html": {
    "href": "api/ConcreteMC.MolangSharp.Runtime.Value.IMoValue.html",
    "title": "Interface IMoValue",
    "keywords": "Interface IMoValue Resembles a MoLang compatible value. Inherited Members IEquatable<IMoValue>.Equals(IMoValue) Namespace: ConcreteMC.MolangSharp.Runtime.Value Assembly: ConcreteMC.MolangSharp.dll Syntax public interface IMoValue : IEquatable<IMoValue> Properties | Improve this Doc View Source Value Declaration object Value { get; } Property Value Type Description object Methods | Improve this Doc View Source AsBool() Declaration bool AsBool() Returns Type Description bool | Improve this Doc View Source AsDouble() Declaration double AsDouble() Returns Type Description double | Improve this Doc View Source AsFloat() Declaration float AsFloat() Returns Type Description float | Improve this Doc View Source AsString() Declaration string AsString() Returns Type Description string"
  },
  "api/ConcreteMC.MolangSharp.Runtime.Value.MoValue.html": {
    "href": "api/ConcreteMC.MolangSharp.Runtime.Value.MoValue.html",
    "title": "Class MoValue",
    "keywords": "Class MoValue Inheritance object MoValue Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Runtime.Value Assembly: ConcreteMC.MolangSharp.dll Syntax public static class MoValue Methods | Improve this Doc View Source FromObject(object) Declaration public static IMoValue FromObject(object value) Parameters Type Name Description object value Returns Type Description IMoValue"
  },
  "api/ConcreteMC.MolangSharp.Runtime.Value.StringValue.html": {
    "href": "api/ConcreteMC.MolangSharp.Runtime.Value.StringValue.html",
    "title": "Class StringValue",
    "keywords": "Class StringValue Represents a string value Inheritance object StringValue Implements IMoValue IEquatable<IMoValue> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ConcreteMC.MolangSharp.Runtime.Value Assembly: ConcreteMC.MolangSharp.dll Syntax public class StringValue : IMoValue, IEquatable<IMoValue> Constructors | Improve this Doc View Source StringValue(string) Declaration public StringValue(string value) Parameters Type Name Description string value Properties | Improve this Doc View Source Value Declaration public string Value { get; set; } Property Value Type Description string Methods | Improve this Doc View Source Equals(IMoValue) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(IMoValue b) Parameters Type Name Description IMoValue b Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. Implements IMoValue IEquatable<T>"
  },
  "api/ConcreteMC.MolangSharp.Utils.html": {
    "href": "api/ConcreteMC.MolangSharp.Utils.html",
    "title": "Namespace ConcreteMC.MolangSharp.Utils",
    "keywords": "Namespace ConcreteMC.MolangSharp.Utils Classes MoPath Describes the path of a variable/function"
  },
  "api/ConcreteMC.MolangSharp.Utils.MoPath.html": {
    "href": "api/ConcreteMC.MolangSharp.Utils.MoPath.html",
    "title": "Class MoPath",
    "keywords": "Class MoPath Describes the path of a variable/function Inheritance object MoPath Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: ConcreteMC.MolangSharp.Utils Assembly: ConcreteMC.MolangSharp.dll Syntax public class MoPath Constructors | Improve this Doc View Source MoPath(string) Declaration public MoPath(string path) Parameters Type Name Description string path Properties | Improve this Doc View Source HasChildren Whether this path has any child elements Declaration public bool HasChildren { get; } Property Value Type Description bool | Improve this Doc View Source Next The next element Declaration public MoPath Next { get; } Property Value Type Description MoPath | Improve this Doc View Source Path The full path Declaration public string Path { get; } Property Value Type Description string | Improve this Doc View Source Root The root of this path Declaration public MoPath Root { get; } Property Value Type Description MoPath | Improve this Doc View Source Value The value of this path Declaration public string Value { get; } Property Value Type Description string Remarks Think of this is the filename in a path Methods | Improve this Doc View Source ToString() Returns a string that represents the current object. Declaration public override string ToString() Returns Type Description string A string that represents the current object. Overrides object.ToString()"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "MoLangSharp API Documentation",
    "keywords": "MoLangSharp API Documentation Written documentation is work in progress, in the meantime there is generated code documentation. See the top menu."
  },
  "articles/getting-started.html": {
    "href": "articles/getting-started.html",
    "title": "Getting Started",
    "keywords": "Getting Started Basic example using ConcreteMC.MolangSharp.Parser; using ConcreteMC.MolangSharp.Runtime; //Initialize the runtime MoLangRuntime runtime = new MoLangRuntime(); //Parse our MoLang expression var parsed = MoLangParser.Parse(\"10 * 45.0\"); //Execute the expression var result = runtime.Execute(parsed); Console.WriteLine($\"Result={result.AsDouble()}\"); Output Result=450 More examples Check out the Examples folder in the Github repository: https://github.com/ConcreteMC/MolangSharp/tree/main/src/examples"
  },
  "articles/index.html": {
    "href": "articles/index.html",
    "title": "Articles",
    "keywords": "Articles"
  },
  "articles/interop.html": {
    "href": "articles/interop.html",
    "title": "Interoperability",
    "keywords": "Interoperability MolangSharp has the ability to expose class properties, fields & methods to the runtime. Defining a property In the following example we will show howto expose a property or field to MoLang. [MoProperty(\"myProperty\")] public double MyProperty { get; set; } //The following property only has a GET accessor and will be readonly [MoProperty(\"myReadOnlyProperty\")] public double ReadonlyProperty { get; } //This will expose the field to MoLang [MoProperty(\"myField\")] public readonly double MyField; Defining a function/method In the following example we will show howto expose a method to MoLang. [MoFunction(\"add\")] public double Add(double a, double b) { return a + b; } Example class This example will show how to expose our custom MyMath class to MoLang The class This is the class we'll be exposing to MoLang public class MyMath { [MoFunction(\"sin\")] public double Sin(double value) => Math.Sin(value * (Math.PI / 180d)); [MoFunction(\"asin\")] public double Asin(double value) => Math.Asin(value * (Math.PI / 180d)); [MoFunction(\"cos\")] public double Cos(double value) => Math.Cos(value * (Math.PI / 180d)); [MoFunction(\"acos\")] public double Acos(double value) => Math.Acos(value * (Math.PI / 180d)); } Making the class available to the runtime MoLangEnvironment environment = new MoLangEnvironment(); environment.Structs.Add(\"custom_math\", new InteropStruct(new MyMath())); MoLangRuntime runtime = new MoLangRuntime(environment); This would expose the MyMath class to the runtime instance created in the example. The following example would now be valid. custom_math.sin(12.0);"
  },
  "index.html": {
    "href": "index.html",
    "title": "MoLangSharp Documentation",
    "keywords": "MoLangSharp Documentation Written documentation is work in progress, in the meantime there is generated code documentation. See the top menu."
  }
}